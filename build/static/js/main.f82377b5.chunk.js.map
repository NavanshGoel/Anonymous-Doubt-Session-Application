{"version":3,"sources":["components/AdminMessage.jsx","components/StudentMessage.jsx","components/SpeechToText/supportedLanguages.js","components/SpeechToText/SpeechToText.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["AdminMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","StudentMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","SpeechToTextDemo","state","error","interimText","finalisedText","listening","language","onAnythingSaid","setState","onEndEvent","isWidthUp","props","width","startListening","onFinalised","listener","SpeechToText","err","console","log","stopListening","content","buttonForListening","this","classes","Button","onClick","variant","Grid","container","spacing","item","xs","md","Paper","paper","lg","Typography","gutterBottom","FormControl","formControl","InputLabel","Select","value","onChange","evt","target","disabled","supportedLanguages","map","MenuItem","FormHelperText","Table","table","TableHead","TableRow","TableCell","TableBody","component","scope","Component","withWidth","withStyles","theme","root","paddingTop","paddingLeft","paddingRight","flex","grow","flexGrow","mixins","gutters","paddingBottom","MessageForm","useState","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","Speechtext","placeholder","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","class","href","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isAdminMessage","people","person","index","last_read","title","keys","Object","key","lastMessageKey","renderMessages","height","Modal","setUsername","password","setPassword","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f82377b5.chunk.js","sourcesContent":["const AdminMessage = ({ message }) => {\n    if (message.attachments && message.attachments.length > 0) {\n      return (\n        <img\n          src={message.attachments[0].file}\n          alt=\"message-attachment\"\n          className=\"message-image\"\n          style={{ float: 'right' }}\n        />\n      );\n    }\n  \n    return (\n      <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\n        {message.text}\n      </div>\n    );\n  };\n  \n  export default AdminMessage;","const StudentMessage = ({ lastMessage, message }) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\n  \n    return (\n      <div className=\"message-row\">\n        {isFirstMessageByUser && (\n          <div\n            className=\"message-avatar\"\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\n          />\n        )}\n        {message.attachments && message.attachments.length > 0\n          ? (\n            <img\n              src={message.attachments[0].file}\n              alt=\"message-attachment\"\n              className=\"message-image\"\n              style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n            />\n          )\n          : (\n            <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\n              {message.text}\n            </div>\n          )}\n      </div>\n    );\n  };\n  \n  export default StudentMessage;","export default [\r\n  ['Afrikaans (Suid-Afrika)', 'af-ZA'],\r\n  ['አማርኛ (ኢትዮጵያ)', 'am-ET'],\r\n  ['Հայ (Հայաստան)', 'hy-AM'],\r\n  ['Azərbaycan (Azərbaycan)', 'az-AZ'],\r\n  ['Bahasa Indonesia (Indonesia)', 'id-ID'],\r\n  ['Bahasa Melayu (Malaysia)', 'ms-MY'],\r\n  ['বাংলা (বাংলাদেশ)', 'bn-BD'],\r\n  ['বাংলা (ভারত)', 'bn-IN'],\r\n  ['Català (Espanya)', 'ca-ES'],\r\n  ['Čeština (Česká republika)', 'cs-CZ'],\r\n  ['Dansk (Danmark)', 'da-DK'],\r\n  ['Deutsch (Deutschland)', 'de-DE'],\r\n  ['English (Australia)', 'en-AU'],\r\n  ['English (Canada)', 'en-CA'],\r\n  ['English (Ghana)', 'en-GH'],\r\n  ['English (Great Britain)', 'en-GB'],\r\n  ['English (India)', 'en-IN'],\r\n  ['English (Ireland)', 'en-IE'],\r\n  ['English (Kenya)', 'en-KE'],\r\n  ['English (New Zealand)', 'en-NZ'],\r\n  ['English (Nigeria)', 'en-NG'],\r\n  ['English (Philippines)', 'en-PH'],\r\n  ['English (South Africa)', 'en-ZA'],\r\n  ['English (Tanzania)', 'en-TZ'],\r\n  ['English (United States)', 'en-US'],\r\n  ['Español (Argentina)', 'es-AR'],\r\n  ['Español (Bolivia)', 'es-BO'],\r\n  ['Español (Chile)', 'es-CL'],\r\n  ['Español (Colombia)', 'es-CO'],\r\n  ['Español (Costa Rica)', 'es-CR'],\r\n  ['Español (Ecuador)', 'es-EC'],\r\n  ['Español (El Salvador)', 'es-SV'],\r\n  ['Español (España)', 'es-ES'],\r\n  ['Español (Estados Unidos)', 'es-US'],\r\n  ['Español (Guatemala)', 'es-GT'],\r\n  ['Español (Honduras)', 'es-HN'],\r\n  ['Español (México)', 'es-MX'],\r\n  ['Español (Nicaragua)', 'es-NI'],\r\n  ['Español (Panamá)', 'es-PA'],\r\n  ['Español (Paraguay)', 'es-PY'],\r\n  ['Español (Perú)', 'es-PE'],\r\n  ['Español (Puerto Rico)', 'es-PR'],\r\n  ['Español (República Dominicana)', 'es-DO'],\r\n  ['Español (Uruguay)', 'es-UY'],\r\n  ['Español (Venezuela)', 'es-VE'],\r\n  ['Euskara (Espainia)', 'eu-ES'],\r\n  ['Filipino (Pilipinas)', 'fil-PH'],\r\n  ['Français (Canada)', 'fr-CA'],\r\n  ['Français (France)', 'fr-FR'],\r\n  ['Galego (España)', 'gl-ES'],\r\n  ['ქართული (საქართველო)', 'ka-GE'],\r\n  ['ગુજરાતી (ભારત)', 'gu-IN'],\r\n  ['Hrvatski (Hrvatska)', 'hr-HR'],\r\n  ['IsiZulu (Ningizimu Afrika)', 'zu-ZA'],\r\n  ['Íslenska (Ísland)', 'is-IS'],\r\n  ['Italiano (Italia)', 'it-IT'],\r\n  ['Jawa (Indonesia)', 'jv-ID'],\r\n  ['ಕನ್ನಡ (ಭಾರತ)', 'kn-IN'],\r\n  ['ភាសាខ្មែរ (កម្ពុជា)', 'km-KH'],\r\n  ['ລາວ (ລາວ)', 'lo-LA'],\r\n  ['Latviešu (latviešu)', 'lv-LV'],\r\n  ['Lietuvių (Lietuva)', 'lt-LT'],\r\n  ['Magyar (Magyarország)', 'hu-HU'],\r\n  ['മലയാളം (ഇന്ത്യ)', 'ml-IN'],\r\n  ['मराठी (भारत)', 'mr-IN'],\r\n  ['Nederlands (Nederland)', 'nl-NL'],\r\n  ['नेपाली (नेपाल)', 'ne-NP'],\r\n  ['Norsk bokmål (Norge)', 'nb-NO'],\r\n  ['Polski (Polska)', 'pl-PL'],\r\n  ['Português (Brasil)', 'pt-BR'],\r\n  ['Português (Portugal)', 'pt-PT'],\r\n  ['Română (România)', 'ro-RO'],\r\n  ['සිංහල (ශ්රී ලංකාව)', 'si-LK'],\r\n  ['Slovenčina (Slovensko)', 'sk-SK'],\r\n  ['Slovenščina (Slovenija)', 'sl-SI'],\r\n  ['Urang (Indonesia)', 'su-ID'],\r\n  ['Swahili (Tanzania)', 'sw-TZ'],\r\n  ['Swahili (Kenya)', 'sw-KE'],\r\n  ['Suomi (Suomi)', 'fi-FI'],\r\n  ['Svenska (Sverige)', 'sv-SE'],\r\n  ['தமிழ் (இந்தியா)', 'ta-IN'],\r\n  ['தமிழ் (சிங்கப்பூர்)', 'ta-SG'],\r\n  ['தமிழ் (இலங்கை)', 'ta-LK'],\r\n  ['தமிழ் (மலேசியா)', 'ta-MY'],\r\n  ['తెలుగు (భారతదేశం)', 'te-IN'],\r\n  ['Tiếng Việt (Việt Nam)', 'vi-VN'],\r\n  ['Türkçe (Türkiye)', 'tr-TR'],\r\n  ['اردو (پاکستان)', 'ur-PK'],\r\n  ['اردو (بھارت)', 'ur-IN'],\r\n  ['Ελληνικά (Ελλάδα)', 'el-GR'],\r\n  ['Български (България)', 'bg-BG'],\r\n  ['Русский (Россия)', 'ru-RU'],\r\n  ['Српски (Србија)', 'sr-RS'],\r\n  ['Українська (Україна)', 'uk-UA'],\r\n  ['עברית (ישראל)', 'he-IL'],\r\n  ['العربية (إسرائيل)', 'ar-IL'],\r\n  ['العربية (الأردن)', 'ar-JO'],\r\n  ['العربية (الإمارات)', 'ar-AE'],\r\n  ['العربية (البحرين)', 'ar-BH'],\r\n  ['العربية (الجزائر)', 'ar-DZ'],\r\n  ['العربية (السعودية)', 'ar-SA'],\r\n  ['العربية (العراق)', 'ar-IQ'],\r\n  ['العربية (الكويت)', 'ar-KW'],\r\n  ['العربية (المغرب)', 'ar-MA'],\r\n  ['العربية (تونس)', 'ar-TN'],\r\n  ['العربية (عُمان)', 'ar-OM'],\r\n  ['العربية (فلسطين)', 'ar-PS'],\r\n  ['العربية (قطر)', 'ar-QA'],\r\n  ['العربية (لبنان)', 'ar-LB'],\r\n  ['العربية (مصر)', 'ar-EG'],\r\n  ['فارسی (ایران)', 'fa-IR'],\r\n  ['हिन्दी (भारत)', 'hi-IN'],\r\n  ['ไทย (ประเทศไทย)', 'th-TH'],\r\n  ['한국어 (대한민국)', 'ko-KR'],\r\n  ['國語 (台灣)', 'cmn-Hant-TW'],\r\n  ['廣東話 (香港)', 'yue-Hant-HK'],\r\n  ['日本語（日本）', 'ja-JP'],\r\n  ['普通話 (香港)', 'cmn-Hans-HK'],\r\n  ['普通话 (中国大陆)', 'cmn-Hans-CN']\r\n];\r\n","import React, { Component } from \"react\";\nimport SpeechToText from \"speech-to-text\";\nimport supportedLanguages from \"./supportedLanguages\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Button,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Grid,\n  AppBar,\n  Toolbar,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\n\nconst styles = (theme) => ({\n  root: {\n    paddingTop: 65,\n    paddingLeft: 11,\n    paddingRight: 11,\n  },\n  flex: {\n    flex: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  paper: theme.mixins.gutters({\n    paddingTop: 22,\n    paddingBottom: 22,\n  }),\n});\n\nclass SpeechToTextDemo extends Component {\n  state = {\n    error: \"\",\n    interimText: \"\",\n    finalisedText: [],\n    listening: false,\n    language: \"en-US\",\n  };\n\n  onAnythingSaid = (text) => {\n    this.setState({ interimText: text });\n  };\n\n  onEndEvent = () => {\n    if (!isWidthUp(\"sm\", this.props.width)) {\n      this.setState({ listening: false });\n    } else if (this.state.listening) {\n      this.startListening();\n    }\n  };\n\n  onFinalised = (text) => {\n    this.setState({\n      finalisedText: [text, ...this.state.finalisedText],\n      interimText: \"\",\n    });\n  };\n\n  startListening = () => {\n    try {\n      this.listener = new SpeechToText(\n        this.onFinalised,\n        this.onEndEvent,\n        this.onAnythingSaid,\n        this.state.language\n      );\n      this.listener.startListening();\n      this.setState({ listening: true });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  stopListening = () => {\n    this.listener.stopListening();\n    this.setState({ listening: false });\n  };\n\n  render() {\n    const {\n      error,\n      interimText,\n      finalisedText,\n      listening,\n      language,\n    } = this.state;\n    const { classes } = this.props;\n    let content;\n    if (error) {\n      console.log(error);\n    } else {\n      let buttonForListening;\n\n      if (listening) {\n        buttonForListening = (\n          <Button onClick={() => this.stopListening()}>Stop Listening</Button>\n        );\n      } else {\n        buttonForListening = (\n          <Button onClick={() => this.startListening()} variant=\"contained\">\n            Start Listening\n          </Button>\n        );\n      }\n      content = (\n        <Grid container spacing={16}>\n          <Grid item xs={12} md={12}>\n            <Paper className={this.props.classes.paper}>\n              <Grid container spacing={16}>\n                <Grid item xs={12} lg={6}>\n                  <Typography variant=\"overline\" gutterBottom>\n                    Status: {listening ? \"listening...\" : \"finished listening\"}\n                  </Typography>\n                  <br />\n                  {buttonForListening}\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel>Language</InputLabel>\n                    <Select\n                      value={language}\n                      onChange={(evt) =>\n                        this.setState({ language: evt.target.value })\n                      }\n                      disabled={listening}\n                    >\n                      {supportedLanguages.map((language) => (\n                        <MenuItem key={language[1]} value={language[1]}>\n                          {language[0]}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    <FormHelperText>\n                      What language are you going to speak in?\n                    </FormHelperText>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Finalised Text</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {finalisedText[0]}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Grid>\n        </Grid>\n      );\n    }\n    return <Grid container>{content}</Grid>;\n  }\n}\nexport default withWidth()(withStyles(styles)(SpeechToTextDemo));\n","import react, { useState } from \"react\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport SpeechToTextDemo from \"./SpeechToText/SpeechToText.jsx\";\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n    setValue(\"\");\n  };\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <SpeechToTextDemo Speechtext={setValue} />\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: \"none\" }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n      <button class=\"btn\">\n        <a href=\"https://realtimeboard.herokuapp.com/\">W</a>\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import AdminMessage from \"./AdminMessage\";\nimport StudentMessage from \"./StudentMessage\";\nimport MessageForm from \"./MessageForm\";\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isAdminMessage) =>\n    chat.people.map(\n      (person, index) =>\n        person.last_read === message.id && (\n          <div\n            key={`read_${index}`}\n            className=\"read-receipt\"\n            style={{\n              float: isAdminMessage ? \"right\" : \"left\",\n              backgroundImage:\n                person.person.avatar && `url(${person.person.avatar})`,\n            }}\n          />\n        )\n    );\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isAdminMessage = userName === message.sender.username;\n      return (\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\n          <div className=\"message-block\">\n            {isAdminMessage ? (\n              <AdminMessage message={message} />\n            ) : (\n              <StudentMessage\n                message={message}\n                lastMessage={messages[lastMessageKey]}\n              />\n            )}\n          </div>\n          <div\n            className=\"read-receipts\"\n            style={{\n              marginRight: isAdminMessage ? \"18px\" : \"0px\",\n              marginLeft: isAdminMessage ? \"0px\" : \"68px\",\n            }}\n          >\n            {renderReadReceipts(message, isAdminMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <hr />\n        <div className=\"chat-subtitle\">\n          {/* {chat.people.map((person) => ` ${person.person.username}`)} */}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: \"100px\" }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n","import { useState } from 'react';\nimport axios from 'axios';\n\nconst projectID = '7634c558-712c-4d03-a5de-6d3012888b2e';\n\nconst Modal = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\n\n    try {\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\n\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n      window.location.reload();\n      setError('');\n    } catch (err) {\n      setError('Oops, incorrect credentials.');\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">User Login</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Login</span>\n            </button>\n          </div>\n        </form>\n        <h1>{error}</h1>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\n\nimport './App.css';\n\nconst projectID = '7634c558-712c-4d03-a5de-6d3012888b2e';\n\nconst App = () => {\n    if (!localStorage.getItem('username')) return <LoginForm />;                                       \n\n    return (\n        <ChatEngine\n            height=\"100vh\"\n            projectID={projectID}\n            userName={localStorage.getItem('username')}\n            userSecret={localStorage.getItem('password')}\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n        />\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}