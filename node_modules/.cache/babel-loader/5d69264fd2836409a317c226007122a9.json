{"ast":null,"code":"var _jsxFileName = \"/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/src/components/MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport { render } from \"@testing-library/react\";\nimport SpeechToText from \"speech-to-text\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const {\n    chatId,\n    creds\n  } = props;\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n    }\n\n    setValue(\"\");\n  };\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: \"\"\n    });\n    state = {\n      error: \"\",\n      interimText: \"\",\n      finalisedText: [],\n      listening: false,\n      language: \"en-US\"\n    };\n\n    onAnythingSaid = text => {\n      this.setState({\n        interimText: text\n      });\n    };\n\n    onEndEvent = () => {\n      if (!isWidthUp(\"sm\", this.props.width)) {\n        this.setState({\n          listening: false\n        });\n      } else if (this.state.listening) {\n        this.startListening();\n      }\n    };\n\n    onFinalised = text => {\n      this.setState({\n        finalisedText: [text, ...this.state.finalisedText],\n        interimText: \"\"\n      });\n    };\n\n    startListening = () => {\n      try {\n        this.listener = new SpeechToText(this.onFinalised, this.onEndEvent, this.onAnythingSaid, this.state.language);\n        this.listener.startListening();\n        this.setState({\n          listening: true\n        });\n      } catch (err) {\n        console.log(\"yoyoy\");\n        console.log(err);\n      }\n    };\n\n    stopListening = () => {\n      this.listener.stopListening();\n      this.setState({\n        listening: false\n      });\n    };\n  };\n\n  let buttonForListening;\n\n  if (listening) {\n    buttonForListening = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => this.stopListening(),\n      children: \"Stop Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  } else {\n    buttonForListening = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => this.startListening(),\n      variant: \"contained\",\n      children: \"Start Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Send a message...\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: /*#__PURE__*/_jsxDEV(PictureOutlined, {\n          className: \"picture-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: false,\n      id: \"upload-button\",\n      style: {\n        display: \"none\"\n      },\n      onChange: handleUpload.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), buttonForListening, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-button\",\n      children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n        className: \"send-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/src/components/MessageForm.jsx"],"names":["useState","SendOutlined","PictureOutlined","sendMessage","isTyping","render","SpeechToText","MessageForm","props","value","setValue","chatId","creds","handleChange","event","target","handleSubmit","preventDefault","text","trim","length","handleUpload","files","state","error","interimText","finalisedText","listening","language","onAnythingSaid","setState","onEndEvent","isWidthUp","width","startListening","onFinalised","listener","err","console","log","stopListening","buttonForListening","display","bind"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport { render } from \"@testing-library/react\";\nimport SpeechToText from \"speech-to-text\";\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n    setValue(\"\");\n  };\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n\n    state = {\n      error: \"\",\n      interimText: \"\",\n      finalisedText: [],\n      listening: false,\n      language: \"en-US\",\n    };\n\n    onAnythingSaid = (text) => {\n      this.setState({ interimText: text });\n    };\n\n    onEndEvent = () => {\n      if (!isWidthUp(\"sm\", this.props.width)) {\n        this.setState({ listening: false });\n      } else if (this.state.listening) {\n        this.startListening();\n      }\n    };\n\n    onFinalised = (text) => {\n      this.setState({\n        finalisedText: [text, ...this.state.finalisedText],\n        interimText: \"\",\n      });\n    };\n\n    startListening = () => {\n      try {\n        this.listener = new SpeechToText(\n          this.onFinalised,\n          this.onEndEvent,\n          this.onAnythingSaid,\n          this.state.language\n        );\n        this.listener.startListening();\n        this.setState({ listening: true });\n      } catch (err) {\n        console.log(\"yoyoy\");\n        console.log(err);\n      }\n    };\n\n    stopListening = () => {\n      this.listener.stopListening();\n      this.setState({ listening: false });\n    };\n  };\n  let buttonForListening;\n  if (listening) {\n    buttonForListening = (\n      <Button onClick={() => this.stopListening()}>Stop Listening</Button>\n    );\n  } else {\n    buttonForListening = (\n      <Button onClick={() => this.startListening()} variant=\"contained\">\n        Start Listening\n      </Button>\n    );\n  }\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: \"none\" }}\n        onChange={handleUpload.bind(this)}\n      />\n      {buttonForListening}\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n"]},"metadata":{},"sourceType":"module"}