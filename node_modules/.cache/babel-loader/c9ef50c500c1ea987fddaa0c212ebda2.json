{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tls_1 = require(\"tls\");\n\nconst deferToConnect = (socket, fn) => {\n  let listeners;\n\n  if (typeof fn === 'function') {\n    const connect = fn;\n    listeners = {\n      connect\n    };\n  } else {\n    listeners = fn;\n  }\n\n  const hasConnectListener = typeof listeners.connect === 'function';\n  const hasSecureConnectListener = typeof listeners.secureConnect === 'function';\n  const hasCloseListener = typeof listeners.close === 'function';\n\n  const onConnect = () => {\n    if (hasConnectListener) {\n      listeners.connect();\n    }\n\n    if (socket instanceof tls_1.TLSSocket && hasSecureConnectListener) {\n      if (socket.authorized) {\n        listeners.secureConnect();\n      } else if (!socket.authorizationError) {\n        socket.once('secureConnect', listeners.secureConnect);\n      }\n    }\n\n    if (hasCloseListener) {\n      socket.once('close', listeners.close);\n    }\n  };\n\n  if (socket.writable && !socket.connecting) {\n    onConnect();\n  } else if (socket.connecting) {\n    socket.once('connect', onConnect);\n  } else if (socket.destroyed && hasCloseListener) {\n    listeners.close(socket._hadError);\n  }\n};\n\nexports.default = deferToConnect; // For CommonJS default export support\n\nmodule.exports = deferToConnect;\nmodule.exports.default = deferToConnect;","map":{"version":3,"sources":["/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/node_modules/defer-to-connect/dist/index.js"],"names":["Object","defineProperty","exports","value","tls_1","require","deferToConnect","socket","fn","listeners","connect","hasConnectListener","hasSecureConnectListener","secureConnect","hasCloseListener","close","onConnect","TLSSocket","authorized","authorizationError","once","writable","connecting","destroyed","_hadError","default","module"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,KAAD,CAArB;;AACA,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,EAAT,KAAgB;AACnC,MAAIC,SAAJ;;AACA,MAAI,OAAOD,EAAP,KAAc,UAAlB,EAA8B;AAC1B,UAAME,OAAO,GAAGF,EAAhB;AACAC,IAAAA,SAAS,GAAG;AAAEC,MAAAA;AAAF,KAAZ;AACH,GAHD,MAIK;AACDD,IAAAA,SAAS,GAAGD,EAAZ;AACH;;AACD,QAAMG,kBAAkB,GAAG,OAAOF,SAAS,CAACC,OAAjB,KAA6B,UAAxD;AACA,QAAME,wBAAwB,GAAG,OAAOH,SAAS,CAACI,aAAjB,KAAmC,UAApE;AACA,QAAMC,gBAAgB,GAAG,OAAOL,SAAS,CAACM,KAAjB,KAA2B,UAApD;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIL,kBAAJ,EAAwB;AACpBF,MAAAA,SAAS,CAACC,OAAV;AACH;;AACD,QAAIH,MAAM,YAAYH,KAAK,CAACa,SAAxB,IAAqCL,wBAAzC,EAAmE;AAC/D,UAAIL,MAAM,CAACW,UAAX,EAAuB;AACnBT,QAAAA,SAAS,CAACI,aAAV;AACH,OAFD,MAGK,IAAI,CAACN,MAAM,CAACY,kBAAZ,EAAgC;AACjCZ,QAAAA,MAAM,CAACa,IAAP,CAAY,eAAZ,EAA6BX,SAAS,CAACI,aAAvC;AACH;AACJ;;AACD,QAAIC,gBAAJ,EAAsB;AAClBP,MAAAA,MAAM,CAACa,IAAP,CAAY,OAAZ,EAAqBX,SAAS,CAACM,KAA/B;AACH;AACJ,GAfD;;AAgBA,MAAIR,MAAM,CAACc,QAAP,IAAmB,CAACd,MAAM,CAACe,UAA/B,EAA2C;AACvCN,IAAAA,SAAS;AACZ,GAFD,MAGK,IAAIT,MAAM,CAACe,UAAX,EAAuB;AACxBf,IAAAA,MAAM,CAACa,IAAP,CAAY,SAAZ,EAAuBJ,SAAvB;AACH,GAFI,MAGA,IAAIT,MAAM,CAACgB,SAAP,IAAoBT,gBAAxB,EAA0C;AAC3CL,IAAAA,SAAS,CAACM,KAAV,CAAgBR,MAAM,CAACiB,SAAvB;AACH;AACJ,CArCD;;AAsCAtB,OAAO,CAACuB,OAAR,GAAkBnB,cAAlB,C,CACA;;AACAoB,MAAM,CAACxB,OAAP,GAAiBI,cAAjB;AACAoB,MAAM,CAACxB,OAAP,CAAeuB,OAAf,GAAyBnB,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tls_1 = require(\"tls\");\nconst deferToConnect = (socket, fn) => {\n    let listeners;\n    if (typeof fn === 'function') {\n        const connect = fn;\n        listeners = { connect };\n    }\n    else {\n        listeners = fn;\n    }\n    const hasConnectListener = typeof listeners.connect === 'function';\n    const hasSecureConnectListener = typeof listeners.secureConnect === 'function';\n    const hasCloseListener = typeof listeners.close === 'function';\n    const onConnect = () => {\n        if (hasConnectListener) {\n            listeners.connect();\n        }\n        if (socket instanceof tls_1.TLSSocket && hasSecureConnectListener) {\n            if (socket.authorized) {\n                listeners.secureConnect();\n            }\n            else if (!socket.authorizationError) {\n                socket.once('secureConnect', listeners.secureConnect);\n            }\n        }\n        if (hasCloseListener) {\n            socket.once('close', listeners.close);\n        }\n    };\n    if (socket.writable && !socket.connecting) {\n        onConnect();\n    }\n    else if (socket.connecting) {\n        socket.once('connect', onConnect);\n    }\n    else if (socket.destroyed && hasCloseListener) {\n        listeners.close(socket._hadError);\n    }\n};\nexports.default = deferToConnect;\n// For CommonJS default export support\nmodule.exports = deferToConnect;\nmodule.exports.default = deferToConnect;\n"]},"metadata":{},"sourceType":"script"}