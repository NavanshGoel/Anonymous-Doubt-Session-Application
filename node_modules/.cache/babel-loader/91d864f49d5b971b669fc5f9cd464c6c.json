{"ast":null,"code":"'use strict';\n\nconst deferToConnect = require('defer-to-connect');\n\nmodule.exports = request => {\n  const timings = {\n    start: Date.now(),\n    socket: null,\n    lookup: null,\n    connect: null,\n    upload: null,\n    response: null,\n    end: null,\n    error: null,\n    phases: {\n      wait: null,\n      dns: null,\n      tcp: null,\n      request: null,\n      firstByte: null,\n      download: null,\n      total: null\n    }\n  };\n\n  const handleError = origin => {\n    const emit = origin.emit.bind(origin);\n\n    origin.emit = (event, ...args) => {\n      // Catches the `error` event\n      if (event === 'error') {\n        timings.error = Date.now();\n        timings.phases.total = timings.error - timings.start;\n        origin.emit = emit;\n      } // Saves the original behavior\n\n\n      return emit(event, ...args);\n    };\n  };\n\n  let uploadFinished = false;\n\n  const onUpload = () => {\n    timings.upload = Date.now();\n    timings.phases.request = timings.upload - timings.connect;\n  };\n\n  handleError(request);\n  request.once('socket', socket => {\n    timings.socket = Date.now();\n    timings.phases.wait = timings.socket - timings.start;\n\n    const lookupListener = () => {\n      timings.lookup = Date.now();\n      timings.phases.dns = timings.lookup - timings.socket;\n    };\n\n    socket.once('lookup', lookupListener);\n    deferToConnect(socket, () => {\n      timings.connect = Date.now();\n\n      if (timings.lookup === null) {\n        socket.removeListener('lookup', lookupListener);\n        timings.lookup = timings.connect;\n        timings.phases.dns = timings.lookup - timings.socket;\n      }\n\n      timings.phases.tcp = timings.connect - timings.lookup;\n\n      if (uploadFinished && !timings.upload) {\n        onUpload();\n      }\n    });\n  });\n  request.once('finish', () => {\n    uploadFinished = true;\n\n    if (timings.connect) {\n      onUpload();\n    }\n  });\n  request.once('response', response => {\n    timings.response = Date.now();\n    timings.phases.firstByte = timings.response - timings.upload;\n    handleError(response);\n    response.once('end', () => {\n      timings.end = Date.now();\n      timings.phases.download = timings.end - timings.response;\n      timings.phases.total = timings.end - timings.start;\n    });\n  });\n  return timings;\n};","map":{"version":3,"sources":["/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/node_modules/@szmarczak/http-timer/source/index.js"],"names":["deferToConnect","require","module","exports","request","timings","start","Date","now","socket","lookup","connect","upload","response","end","error","phases","wait","dns","tcp","firstByte","download","total","handleError","origin","emit","bind","event","args","uploadFinished","onUpload","once","lookupListener","removeListener"],"mappings":"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","sourcesContent":["'use strict';\nconst deferToConnect = require('defer-to-connect');\n\nmodule.exports = request => {\n\tconst timings = {\n\t\tstart: Date.now(),\n\t\tsocket: null,\n\t\tlookup: null,\n\t\tconnect: null,\n\t\tupload: null,\n\t\tresponse: null,\n\t\tend: null,\n\t\terror: null,\n\t\tphases: {\n\t\t\twait: null,\n\t\t\tdns: null,\n\t\t\ttcp: null,\n\t\t\trequest: null,\n\t\t\tfirstByte: null,\n\t\t\tdownload: null,\n\t\t\ttotal: null\n\t\t}\n\t};\n\n\tconst handleError = origin => {\n\t\tconst emit = origin.emit.bind(origin);\n\t\torigin.emit = (event, ...args) => {\n\t\t\t// Catches the `error` event\n\t\t\tif (event === 'error') {\n\t\t\t\ttimings.error = Date.now();\n\t\t\t\ttimings.phases.total = timings.error - timings.start;\n\n\t\t\t\torigin.emit = emit;\n\t\t\t}\n\n\t\t\t// Saves the original behavior\n\t\t\treturn emit(event, ...args);\n\t\t};\n\t};\n\n\tlet uploadFinished = false;\n\tconst onUpload = () => {\n\t\ttimings.upload = Date.now();\n\t\ttimings.phases.request = timings.upload - timings.connect;\n\t};\n\n\thandleError(request);\n\n\trequest.once('socket', socket => {\n\t\ttimings.socket = Date.now();\n\t\ttimings.phases.wait = timings.socket - timings.start;\n\n\t\tconst lookupListener = () => {\n\t\t\ttimings.lookup = Date.now();\n\t\t\ttimings.phases.dns = timings.lookup - timings.socket;\n\t\t};\n\n\t\tsocket.once('lookup', lookupListener);\n\n\t\tdeferToConnect(socket, () => {\n\t\t\ttimings.connect = Date.now();\n\n\t\t\tif (timings.lookup === null) {\n\t\t\t\tsocket.removeListener('lookup', lookupListener);\n\t\t\t\ttimings.lookup = timings.connect;\n\t\t\t\ttimings.phases.dns = timings.lookup - timings.socket;\n\t\t\t}\n\n\t\t\ttimings.phases.tcp = timings.connect - timings.lookup;\n\n\t\t\tif (uploadFinished && !timings.upload) {\n\t\t\t\tonUpload();\n\t\t\t}\n\t\t});\n\t});\n\n\trequest.once('finish', () => {\n\t\tuploadFinished = true;\n\n\t\tif (timings.connect) {\n\t\t\tonUpload();\n\t\t}\n\t});\n\n\trequest.once('response', response => {\n\t\ttimings.response = Date.now();\n\t\ttimings.phases.firstByte = timings.response - timings.upload;\n\n\t\thandleError(response);\n\n\t\tresponse.once('end', () => {\n\t\t\ttimings.end = Date.now();\n\t\t\ttimings.phases.download = timings.end - timings.response;\n\t\t\ttimings.phases.total = timings.end - timings.start;\n\t\t});\n\t});\n\n\treturn timings;\n};\n"]},"metadata":{},"sourceType":"script"}