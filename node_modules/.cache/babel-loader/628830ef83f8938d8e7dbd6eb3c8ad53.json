{"ast":null,"code":"var _jsxFileName = \"/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/src/components/MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport SpeechToTextDemo from \"./SpeechToText/SpeechToText.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  this.state = {\n    showHideDemo1: false,\n    showHideDemo2: false,\n    showHideDemo3: false\n  };\n  const [value, setValue] = useState(\"\");\n  const {\n    chatId,\n    creds\n  } = props;\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n    }\n\n    setValue(\"\");\n  };\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(SpeechToTextDemo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Send a message...\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: /*#__PURE__*/_jsxDEV(PictureOutlined, {\n          className: \"picture-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: false,\n      id: \"upload-button\",\n      style: {\n        display: \"none\"\n      },\n      onChange: handleUpload.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-button\",\n      children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n        className: \"send-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/src/components/MessageForm.jsx"],"names":["useState","SendOutlined","PictureOutlined","sendMessage","isTyping","SpeechToTextDemo","MessageForm","props","state","showHideDemo1","showHideDemo2","showHideDemo3","value","setValue","chatId","creds","handleChange","event","target","handleSubmit","preventDefault","text","trim","length","handleUpload","files","display","bind"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,mBAA9C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,mBAAtC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,OAAKC,KAAL,GAAa;AACXC,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,aAAa,EAAE,KAFJ;AAGXC,IAAAA,aAAa,EAAE;AAHJ,GAAb;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBR,KAA1B;;AACA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR;AACAR,IAAAA,QAAQ,CAACG,KAAD,EAAQO,MAAR,CAAR;AACD,GAHD;;AAIA,QAAMK,YAAY,GAAIF,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,IAAI,GAAGT,KAAK,CAACU,IAAN,EAAb;;AACA,QAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBpB,MAAAA,WAAW,CAACY,KAAD,EAAQD,MAAR,EAAgB;AAAEO,QAAAA;AAAF,OAAhB,CAAX;AACD;;AACDR,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAPD;;AAQA,QAAMW,YAAY,GAAIP,KAAD,IAAW;AAC9Bd,IAAAA,WAAW,CAACY,KAAD,EAAQD,MAAR,EAAgB;AAAEW,MAAAA,KAAK,EAAER,KAAK,CAACC,MAAN,CAAaO,KAAtB;AAA6BJ,MAAAA,IAAI,EAAE;AAAnC,KAAhB,CAAX;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEF,YAAzC;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,KAAK,EAAEP,KAHT;AAIE,MAAA,QAAQ,EAAEI,YAJZ;AAKE,MAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAcE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,EAAE,EAAC,eAHL;AAIE,MAAA,KAAK,EAAE;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAJT;AAKE,MAAA,QAAQ,EAAEF,YAAY,CAACG,IAAb,CAAkB,IAAlB;AALZ;AAAA;AAAA;AAAA;AAAA,YAdF,eAsBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CArDD;;GAAMrB,W;;KAAAA,W;AAuDN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport SpeechToTextDemo from \"./SpeechToText/SpeechToText.jsx\";\n\nconst MessageForm = (props) => {\n  this.state = {\n    showHideDemo1: false,\n    showHideDemo2: false,\n    showHideDemo3: false,\n  };\n\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n    setValue(\"\");\n  };\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <SpeechToTextDemo />\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: \"none\" }}\n        onChange={handleUpload.bind(this)}\n      />\n\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n"]},"metadata":{},"sourceType":"module"}