{"ast":null,"code":"import React, { Component } from 'react';\nimport { WebSocket } from 'nextjs-websocket';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { newChat as newChat$1, TextInput as TextInput$1, Button as Button$1, removePerson as removePerson$1, Avatar as Avatar$1, addPerson as addPerson$1, getOtherPeople as getOtherPeople$1, AutoCompleteInput, deleteChat as deleteChat$1, editChat as editChat$1, Dot as Dot$1, isTyping as isTyping$1, sendMessage as sendMessage$1, TextAreaInput as TextAreaInput$1 } from 'react-chat-engine';\nimport { MenuOutlined, CloseOutlined, LeftOutlined, DownOutlined, SettingOutlined, SyncOutlined, LoadingOutlined, CloseCircleTwoTone, PaperClipOutlined, PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { setConfiguration, Row, Col } from 'react-grid-system';\nimport { animateScroll } from 'react-scroll';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Socket = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Socket, _Component);\n\n  function Socket() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      client: undefined,\n      props: null\n    };\n    return _this;\n  }\n\n  var _proto = Socket.prototype;\n\n  _proto.handleEvent = function handleEvent(event) {\n    var props = this.props;\n    var eventJSON = JSON.parse(event);\n\n    if (eventJSON.action === 'login_error') {\n      console.log(\"Your login credentials were not correct: \\n\\n                Project ID: \" + props.projectID + \" \\n\\n                Username: \" + props.userName + \" \\n\\n                User Secret: \" + props.userSecret + \"\\n\\n                Double check these credentials to make sure they're correct.\\n\\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.\");\n      this.props.onFailAuth && this.props.onFailAuth(this.props);\n    } else if (eventJSON.action === 'is_typing') {\n      props.onTyping && props.onTyping(eventJSON.data.id, eventJSON.data.person);\n    } else if (eventJSON.action === 'new_chat') {\n      props.onNewChat && props.onNewChat(eventJSON.data);\n    } else if (eventJSON.action === 'edit_chat') {\n      props.onEditChat && props.onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      props.onDeleteChat && props.onDeleteChat(eventJSON.data);\n    } else if (eventJSON.action === 'add_person') {\n      props.onAddPerson && props.onAddPerson(eventJSON.data);\n    } else if (eventJSON.action === 'remove_person') {\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      props.onNewMessage && props.onNewMessage(eventJSON.data.id, eventJSON.data.message);\n    } else if (eventJSON.action === 'edit_message') {\n      props.onEditMessage && props.onEditMessage(eventJSON.data.id, eventJSON.data.message);\n    } else if (eventJSON.action === 'delete_message') {\n      props.onDeleteMessage && props.onDeleteMessage(eventJSON.data.id, eventJSON.data.message);\n    }\n  };\n\n  _proto.onClose = function onClose() {\n    this.props.onDisconnect && this.props.onDisconnect();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        publicKey = _this$props.publicKey,\n        projectID = _this$props.projectID,\n        userName = _this$props.userName,\n        userPassword = _this$props.userPassword,\n        userSecret = _this$props.userSecret,\n        development = _this$props.development;\n    var wsStart = development ? 'ws://' : 'wss://';\n    var rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io';\n    var project = publicKey ? publicKey : projectID;\n    var secret = userPassword ? userPassword : userSecret;\n    return /*#__PURE__*/React.createElement(WebSocket, {\n      url: \"\" + wsStart + rootHost + \"/person/?publicKey=\" + project + \"&username=\" + userName + \"&secret=\" + secret,\n      onOpen: function onOpen() {\n        return _this2.props.onConnect && _this2.props.onConnect(_this2.props);\n      },\n      onClose: this.onClose.bind(this),\n      onMessage: this.handleEvent.bind(this),\n      reconnectIntervalInMilliSeconds: 3000\n    });\n  };\n\n  return Socket;\n}(Component);\n\nfunction getApiUrl(props) {\n  if (props && props.development) {\n    return 'http://127.0.0.1:8000';\n  }\n\n  return 'https://api.chatengine.io';\n}\n\nfunction getChats(props, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    props.onGetChats && props.onGetChats(response.data);\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Chats Error', error);\n  });\n}\n\nfunction newChat(props, data, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\", data, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('New Chat Error', error);\n  });\n}\n\nfunction editChat(props, chatId, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/\", data, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Edit Chat Error', error);\n  });\n}\n\nfunction deleteChat(props, chatId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Chat Error', error);\n  });\n}\n\nfunction getMessages(props, chatId, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    props.onGetMessages && props.onGetMessages(chatId, response.data);\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Messages Error', error);\n  });\n}\n\nfunction sendMessage(props, chatId, data, callback) {\n  var formdata = new FormData();\n\n  if (data.attachments) {\n    for (var i = 0; i < data.attachments.length; i++) {\n      formdata.append('attachments', data.attachments[i], data.attachments[i].name);\n    }\n  } else if (data.files) {\n    for (var _i = 0; _i < data.files.length; _i++) {\n      formdata.append('attachments', data.files[_i], data.files[_i].name);\n    }\n  }\n\n  formdata.append('text', data.text);\n  formdata.append('sender_username', data.sender_username);\n  formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}));\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\", formdata, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Send Messages Error', error);\n  });\n}\n\nfunction editMessage(props, chatId, messageId, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", data, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Messages Error', error);\n  });\n}\n\nfunction readMessage(props, chatId, messageId, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    last_read: messageId\n  }, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Send Messages Error', error);\n  });\n}\n\nfunction deleteMessage(props, chatId, messageId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Messages Error', error);\n  });\n}\n\nvar ChatForm = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ChatForm, _React$Component);\n\n  function ChatForm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      value: ''\n    };\n    return _this;\n  }\n\n  var _proto = ChatForm.prototype;\n\n  _proto.handleChange = function handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.value.trim().length > 0) {\n      newChat$1(this.props, {\n        title: this.state.value\n      }, function () {});\n    }\n\n    this.setState({\n      value: ''\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this)\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px'\n      }\n    }, /*#__PURE__*/React.createElement(TextInput$1, {\n      label: \"New Chat\",\n      value: this.state.value,\n      style: {\n        width: 'calc(100% - 48px)'\n      },\n      handleChange: function handleChange(e) {\n        return _this2.handleChange(e);\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'right'\n      }\n    }, /*#__PURE__*/React.createElement(Button$1, {\n      icon: \"plus\",\n      type: \"submit\"\n    })));\n  };\n\n  return ChatForm;\n}(React.Component);\n\nfunction timeSinceDate(date) {\n  if (!date) return '';\n  var day = date.substr(8, 2);\n  var month = date.substr(5, 2);\n  var year = date.substr(0, 4);\n  var hour = date.substr(11, 2);\n  var minute = date.substr(14, 2);\n  var second = date.substr(17, 2);\n  var sent = new Date(month + \" \" + day + \" \" + year);\n  sent.setHours(hour);\n  sent.setMinutes(minute);\n  sent.setSeconds(second);\n  sent = sent.toString();\n  var dayStr = sent.substr(0, 10);\n  var timeStr = sent.substr(15, 6);\n  return dayStr + \" at \" + timeStr;\n}\n\nfunction daySinceSent(date) {\n  if (!date) return '';\n  var day = date.substr(8, 2);\n  var month = date.substr(5, 2);\n  var year = date.substr(0, 4);\n  var sent = new Date(month + \" \" + day + \" \" + year).toString();\n  return sent.substr(4, 6);\n}\n\nvar ChatCard = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatCard, _Component);\n\n  function ChatCard() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ChatCard.prototype;\n\n  _proto.readLastMessage = function readLastMessage(chat) {\n    var _this = this;\n\n    var readLastMessage = true;\n    chat.people.map(function (chat_person) {\n      if (_this.props.userName === chat_person.person.username) {\n        readLastMessage = chat.last_message.id === chat_person.last_read;\n      }\n    });\n    return readLastMessage;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var chat = this.props.chat;\n    var extraStyle = this.props.activeChat === chat.id ? styles.activeChat : {};\n    var otherPerson = chat.people.find(function (person) {\n      return person.person.username !== _this2.props.userName;\n    });\n\n    if (this.props.renderChatCard) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"chat_\" + index\n      }, this.props.renderChatCard(chat, index));\n    }\n\n    var lastMessage = chat.last_message.text;\n\n    if (!lastMessage) {\n      lastMessage = chat.last_message.attachments.length > 0 ? chat.last_message.attachments.length + \" image\" + (chat.last_message.attachments.length > 1 ? 's' : '') : 'Say hello!';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return _this2.props.onChatClick(chat.id);\n      },\n      style: _extends({}, styles.chatContainer, extraStyle),\n      className: \"ce-chat-card \" + (this.props.activeChat === chat.id && 'ce-active-chat-card')\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.titleText,\n      className: \"ce-chat-title-text\"\n    }, chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title, !this.readLastMessage(chat) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-chat-unread-dot\",\n      style: {\n        \"float\": 'right',\n        width: '12px',\n        height: '12px',\n        borderRadius: '6px',\n        backgroundColor: '#1890ff',\n        display: 'inline-block'\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      className: \"ce-chat-subtitle\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.messageText,\n      className: \"ce-chat-subtitle-text ce-chat-subtitle-message\"\n    }, lastMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-chat-subtitle-text ce-chat-subtitle-date\",\n      style: _extends({}, styles.messageText, {\n        textAlign: 'right',\n        width: '25%'\n      })\n    }, daySinceSent(chat.last_message.created))));\n  };\n\n  return ChatCard;\n}(Component);\n\nvar styles = {\n  chatContainer: {\n    padding: '16px',\n    paddingBottom: '12px',\n    cursor: 'pointer'\n  },\n  titleText: {\n    fontWeight: '500',\n    paddingBottom: '4px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  messageText: {\n    width: '75%',\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    display: 'inline-block'\n  },\n  activeChat: {\n    backgroundColor: '#d9d9d9',\n    border: '4px solid white',\n    borderRadius: '12px'\n  }\n};\n\nvar ChatList = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatList, _Component);\n\n  function ChatList() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ChatList.prototype;\n\n  _proto.readLastMessage = function readLastMessage(chat) {\n    var _this = this;\n\n    var readLastMessage = true;\n    chat.people.map(function (chat_person) {\n      if (_this.props.userName === chat_person.person.username) {\n        readLastMessage = chat.last_message.id === chat_person.last_read;\n      }\n    });\n    return readLastMessage;\n  };\n\n  _proto.renderChats = function renderChats(chats) {\n    var _this2 = this;\n\n    return chats.map(function (chat, index) {\n      if (!chat) return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"chat_\" + index\n      });\n\n      if (_this2.props.renderChatCard) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"chat_\" + index\n        }, _this2.props.renderChatCard(chat, index));\n      } else {\n        return /*#__PURE__*/React.createElement(ChatCard, _extends({\n          key: \"chat_\" + index\n        }, _this2.props, {\n          chat: chat\n        }));\n      }\n    });\n  };\n\n  _proto.render = function render() {\n    var chats = this.props.chats ? Object.values(this.props.chats) : [];\n    chats.sort(function (a, b) {\n      var aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created);\n      var bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created);\n      return new Date(bDate) - new Date(aDate);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$1.chatListContainer,\n      className: \"ce-chat-list\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$1.chatsContainer,\n      className: \"ce-chats-container\"\n    }, this.renderChats(chats), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '64px'\n      }\n    }), this.props.renderNewChatForm ? this.props.renderNewChatForm(this.props) : /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$1.newChatContainer,\n      className: \"ce-chat-form-container\"\n    }, /*#__PURE__*/React.createElement(ChatForm, _extends({}, this.props, {\n      className: \"ce-chat-form\"\n    })))));\n  };\n\n  return ChatList;\n}(Component);\n\nvar styles$1 = {\n  chatListContainer: {\n    height: '100%',\n    maxHeight: '100vh',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    borderRight: '1px solid #afafaf',\n    backgroundColor: 'white'\n  },\n  chatsContainer: {\n    width: '100%',\n    backgroundColor: 'white',\n    borderRadius: '0px 0px 24px 24px'\n  },\n  chatContainer: {\n    padding: '16px',\n    paddingBottom: '12px',\n    cursor: 'pointer'\n  },\n  titleText: {\n    fontWeight: '500',\n    paddingBottom: '4px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  messageText: {\n    width: '75%',\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    display: 'inline-block'\n  },\n  activeChat: {\n    backgroundColor: '#d9d9d9',\n    border: '4px solid white',\n    borderRadius: '12px'\n  },\n  newChatContainer: {\n    position: 'absolute',\n    bottom: '0px',\n    padding: '12px',\n    width: 'calc(100% - 25px)',\n    backgroundColor: 'white'\n  }\n};\n\nvar ChatListDrawer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatListDrawer, _Component);\n\n  function ChatListDrawer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  var _proto = ChatListDrawer.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(MenuOutlined, {\n      onClick: function onClick() {\n        return _this2.setState({\n          isOpen: true\n        });\n      },\n      style: {\n        color: 'rgb(24, 144, 255)',\n        outline: 'none'\n      }\n    }), this.state.isOpen && /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$2.drawerContainer\n    }, /*#__PURE__*/React.createElement(CloseOutlined, {\n      style: styles$2.closeIcon,\n      onClick: function onClick() {\n        return _this2.setState({\n          isOpen: false\n        });\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$2.titleContainer\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$2.titleText\n    }, \"My Chats\")), /*#__PURE__*/React.createElement(ChatList, _extends({}, this.props, {\n      onChatClick: function onChatClick(chatId) {\n        _this2.props.onChatClick && _this2.props.onChatClick(chatId);\n\n        _this2.setState({\n          isOpen: false\n        });\n      }\n    }))));\n  };\n\n  return ChatListDrawer;\n}(Component);\n\nvar styles$2 = {\n  drawerContainer: {\n    position: 'fixed',\n    zIndex: '1',\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    textAlign: 'left'\n  },\n  closeIcon: {\n    position: 'absolute',\n    left: '28px',\n    top: '32px'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '24px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  }\n};\n\nvar Person = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Person, _Component);\n\n  function Person() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  var _proto = Person.prototype;\n\n  _proto.onRemovePerson = function onRemovePerson() {\n    removePerson$1(this.props.creds, this.props.chat.id, this.props.person.username);\n  };\n\n  _proto.renderPersonText = function renderPersonText(person) {\n    if (person.first_name !== null) {\n      return \"\" + person.first_name + (person.last_name ? \" \" + person.last_name : '');\n    } else {\n      return person.username;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        person = _this$props.person,\n        chat = _this$props.chat,\n        creds = _this$props.creds;\n\n    if (!person || !chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var admin = chat.admin;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-person-container\",\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          selected: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          selected: false\n        });\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-person-avatar\",\n      style: {\n        padding: '2px',\n        height: '0px'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      avatar: person.avatar,\n      username: person.username,\n      is_online: person.is_online\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-person-text\",\n      style: {\n        paddingLeft: '52px',\n        height: '44px',\n        position: 'relative',\n        top: '10px',\n        fontSize: '15px'\n      }\n    }, this.renderPersonText(person)), this.state.selected && creds.userName === admin.username && person.username !== admin.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-delete-chat\",\n      style: {\n        \"float\": 'right',\n        height: '0px',\n        position: 'relative',\n        bottom: '44px'\n      }\n    }, /*#__PURE__*/React.createElement(Button$1, {\n      theme: \"danger\",\n      icon: \"delete\",\n      onClick: function onClick() {\n        return _this2.onRemovePerson();\n      }\n    })));\n  };\n\n  return Person;\n}(Component);\n\nvar Option = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Option, _React$Component);\n\n  function Option() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false\n    };\n    return _this;\n  }\n\n  var _proto = Option.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props$person = this.props.person,\n        avatar = _this$props$person.avatar,\n        username = _this$props$person.username;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          focused: false\n        });\n      },\n      onClick: function onClick() {\n        return _this2.props.onClick && _this2.props.onClick();\n      },\n      style: _extends({}, styles$3.option, {\n        backgroundColor: this.state.focused ? '#f5f5f5' : 'white'\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Avatar$1, {\n      username: username,\n      avatar: avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        padding: '12px 4px'\n      }\n    }, this.props.person.username));\n  };\n\n  return Option;\n}(React.Component);\n\nvar styles$3 = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  }\n};\n\nvar PersonForm = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(PersonForm, _React$Component);\n\n  function PersonForm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      value: '',\n      others: []\n    };\n    return _this;\n  }\n\n  var _proto = PersonForm.prototype;\n\n  _proto.handleChange = function handleChange(value) {\n    this.setState({\n      value: value\n    });\n  };\n\n  _proto.addPerson = function addPerson(name) {\n    var _this2 = this;\n\n    addPerson$1(this.props.creds, this.props.chat.id, name, function () {\n      _this2.setState({\n        value: ''\n      });\n\n      _this2.getOthers();\n    });\n  };\n\n  _proto.getOthers = function getOthers() {\n    var _this3 = this;\n\n    getOtherPeople$1(this.props.creds, this.props.chat.id, function (id, others) {\n      return _this3.setState({\n        others: others\n      });\n    }, function () {});\n  };\n\n  _proto.renderOption = function renderOption(option) {\n    var _this4 = this;\n\n    return /*#__PURE__*/React.createElement(Option, {\n      person: option,\n      onClick: function onClick() {\n        return _this4.addPerson(option.username);\n      }\n    });\n  };\n\n  _proto.render = function render() {\n    var _this5 = this;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: '12px'\n      }\n    }, /*#__PURE__*/React.createElement(AutoCompleteInput, {\n      style: {\n        width: '100%'\n      },\n      label: \"Type a username\",\n      value: this.state.value,\n      options: this.state.others,\n      onFocus: function onFocus() {\n        return _this5.getOthers();\n      },\n      handleChange: function handleChange(value) {\n        return _this5.handleChange(value);\n      },\n      renderOption: function renderOption(option) {\n        return _this5.renderOption(option);\n      }\n    }));\n  };\n\n  return PersonForm;\n}(React.Component);\n\nvar PeopleList = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(PeopleList, _React$Component);\n\n  function PeopleList() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      collapsed: false,\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = PeopleList.prototype;\n\n  _proto.renderChatPeople = function renderChatPeople(people, chat) {\n    var _this2 = this;\n\n    return people.map(function (chatPerson, index) {\n      return /*#__PURE__*/React.createElement(Person, {\n        key: \"person_\" + index,\n        person: chatPerson.person,\n        creds: _this2.props,\n        chat: chat\n      });\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        chats = _this$props.chats,\n        activeChat = _this$props.activeChat;\n\n    if (!chats || !activeChat || !chats[activeChat] || chats[activeChat].is_direct_chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var chat = chats[activeChat];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderTop: '1px solid #f0f0f0'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: function onMouseEnter() {\n        return _this3.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this3.setState({\n          hovered: false\n        });\n      },\n      onClick: function onClick() {\n        return _this3.setState({\n          collapsed: !_this3.state.collapsed\n        });\n      },\n      style: this.state.hovered ? {\n        backgroundColor: '#f0f0f0',\n        cursor: 'pointer'\n      } : {},\n      className: \"ce-section-title-container ce-person-title-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-section-title ce-people-title\",\n      style: {\n        fontSize: '17px',\n        padding: '12px',\n        fontWeight: '600'\n      }\n    }, \"People\"), this.state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n      style: styles$4.collapseIcon\n    }) : /*#__PURE__*/React.createElement(DownOutlined, {\n      style: styles$4.collapseIcon\n    })), !this.state.collapsed && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '12px'\n      }\n    }), this.renderChatPeople(chat.people, chat), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '12px'\n      }\n    }), this.props && chat && this.props.userName === chat.admin.username && /*#__PURE__*/React.createElement(PersonForm, {\n      creds: this.props,\n      chat: chat\n    })));\n  };\n\n  return PeopleList;\n}(React.Component);\n\nvar styles$4 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar Thumbnail = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Thumbnail, _React$Component);\n\n  function Thumbnail() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Thumbnail.prototype;\n\n  _proto.render = function render() {\n    var attachment = this.props.attachment;\n\n    if (!attachment) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$5.container,\n      className: \"ce-photo-thumbnail\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '100%'\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      alt: attachment.id,\n      style: styles$5.image,\n      src: attachment.file,\n      className: \"ce-photo-img\",\n      id: \"image-\" + attachment.id\n    }));\n  };\n\n  return Thumbnail;\n}(React.Component);\n\nvar styles$5 = {\n  container: {\n    position: 'relative',\n    width: 'calc(33% - 8px)',\n    border: '1px solid white',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  image: {\n    top: '0px',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    objectFit: 'cover'\n  }\n};\n\nvar Photos = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Photos, _React$Component);\n\n  function Photos() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      collapsed: true,\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = Photos.prototype;\n\n  _proto.renderPhotos = function renderPhotos(attachments) {\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail, {\n        key: \"person_\" + index,\n        attachment: attachment\n      });\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        chats = _this$props.chats,\n        activeChat = _this$props.activeChat;\n\n    if (!chats || !activeChat || !chats[activeChat]) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var chat = chats[activeChat];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderTop: '1px solid #f0f0f0'\n      },\n      className: \"ce-photo-section\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      },\n      onClick: function onClick() {\n        return _this2.setState({\n          collapsed: !_this2.state.collapsed\n        });\n      },\n      style: this.state.hovered ? {\n        backgroundColor: '#f0f0f0',\n        cursor: 'pointer'\n      } : {},\n      className: \"ce-section-title-container ce-photo-title-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-section-title ce-photo-title\",\n      style: {\n        fontSize: '17px',\n        padding: '12px',\n        fontWeight: '600'\n      }\n    }, \"Photos\"), this.state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n      style: styles$6.collapseIcon\n    }) : /*#__PURE__*/React.createElement(DownOutlined, {\n      style: styles$6.collapseIcon\n    })), !this.state.collapsed && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-photo-feed\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '12px'\n      }\n    }), this.renderPhotos(chat.attachments)));\n  };\n\n  return Photos;\n}(React.Component);\n\nvar styles$6 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar Options = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Options, _React$Component);\n\n  function Options() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      collapsed: true,\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = Options.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        chats = _this$props.chats,\n        activeChat = _this$props.activeChat;\n\n    if (!chats || !activeChat || !chats[activeChat]) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var chat = chats[activeChat];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderTop: '1px solid #f0f0f0'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      },\n      onClick: function onClick() {\n        return _this2.setState({\n          collapsed: !_this2.state.collapsed\n        });\n      },\n      style: this.state.hovered ? {\n        backgroundColor: '#f0f0f0',\n        cursor: 'pointer'\n      } : {}\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '17px',\n        padding: '12px',\n        fontWeight: '600'\n      }\n    }, \"Options\"), this.state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n      style: styles$7.collapseIcon\n    }) : /*#__PURE__*/React.createElement(DownOutlined, {\n      style: styles$7.collapseIcon\n    })), !this.state.collapsed && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '12px'\n      }\n    }), /*#__PURE__*/React.createElement(Button$1, {\n      value: \"Delete\",\n      theme: \"danger\",\n      icon: \"delete\",\n      onClick: function onClick() {\n        return deleteChat$1(_this2.props, chat.id, function (data) {});\n      },\n      style: {\n        width: '100%',\n        marginBottom: '12px'\n      }\n    })));\n  };\n\n  return Options;\n}(React.Component);\n\nvar styles$7 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar NewMessageForm = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(NewMessageForm, _React$Component);\n\n  function NewMessageForm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      activeChat: null,\n      value: ''\n    };\n    return _this;\n  }\n\n  var _proto = NewMessageForm.prototype;\n\n  _proto.handleChange = function handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    editChat$1(this.props.creds, this.props.chat.id, {\n      title: this.state.value\n    }, function (data) {});\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.chat.title !== this.state.value && this.state.activeChat !== this.props.chat.id) {\n      this.setState({\n        value: this.props.chat.title,\n        activeChat: this.props.chat.id\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      className: \"ce-chat-title-form\"\n    }, /*#__PURE__*/React.createElement(TextInput$1, {\n      label: \"Rename this Chat\",\n      value: this.state.value,\n      \"default\": this.props.chat.title,\n      handleChange: this.handleChange.bind(this),\n      style: {\n        fontSize: '16px',\n        fontWeight: '600',\n        textAlign: 'center',\n        border: '0px solid white',\n        width: '100%'\n      }\n    }));\n  };\n\n  return NewMessageForm;\n}(React.Component);\n\nvar ChatSettingsTop = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatSettingsTop, _Component);\n\n  function ChatSettingsTop() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ChatSettingsTop.prototype;\n\n  _proto.renderOnePerson = function renderOnePerson(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })));\n  };\n\n  _proto.renderTwoPeople = function renderTwoPeople(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 15px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 44px - 22px + 15px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[1].person.username,\n      avatar: people[1].person.avatar\n    })));\n  };\n\n  _proto.renderThreePeople = function renderThreePeople(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 24px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 24px - 44px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[1].person.username,\n      avatar: people[1].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 44px - 44px + 24px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[2].person.username,\n      avatar: people[2].person.avatar\n    })));\n  };\n\n  _proto.getOtherPerson = function getOtherPerson(people) {\n    var _this = this;\n\n    return people.find(function (person) {\n      return person.person.username !== _this.props.userName;\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        chats = _this$props.chats,\n        activeChat = _this$props.activeChat;\n\n    if (!chats || !activeChat || !chats[activeChat]) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var chat = chats[activeChat];\n    var topPeople = chat.people.slice(0, 3);\n    var otherPerson = this.getOtherPerson(chat.people);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-chat-settings-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-chat-avatars-row\"\n    }, topPeople.length === 1 && this.renderOnePerson(topPeople), chat.is_direct_chat && otherPerson && this.renderOnePerson([otherPerson]), !chat.is_direct_chat && otherPerson && topPeople.length === 2 && this.renderTwoPeople(topPeople), !chat.is_direct_chat && otherPerson && topPeople.length === 3 && this.renderThreePeople(topPeople)), chat.is_direct_chat && otherPerson ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '55px',\n        paddingBottom: '7px',\n        fontSize: '16px',\n        fontWeight: '600',\n        textAlign: 'center',\n        border: '0px solid white',\n        width: '100%'\n      }\n    }, otherPerson.person.username) : /*#__PURE__*/React.createElement(NewMessageForm, {\n      chat: chat,\n      creds: this.props\n    }));\n  };\n\n  return ChatSettingsTop;\n}(Component);\n\nvar ChatSettingsContainer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatSettingsContainer, _Component);\n\n  function ChatSettingsContainer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ChatSettingsContainer.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        chats = _this$props.chats,\n        activeChat = _this$props.activeChat;\n    var chat = chats && chats[activeChat];\n    if (!chat) return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$8.filler\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$8.settingsContainer,\n      className: \"ce-settings\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '90%',\n        paddingLeft: '5%'\n      },\n      className: \"ce-settings-container\"\n    }, this.props.renderChatSettingsTop ? this.props.renderChatSettingsTop(this.props, chat) : /*#__PURE__*/React.createElement(ChatSettingsTop, this.props), this.props.renderPeopleSettings ? this.props.renderPeopleSettings(this.props, chat) : /*#__PURE__*/React.createElement(PeopleList, this.props), this.props.renderPhotosSettings ? this.props.renderPhotosSettings(chat) : /*#__PURE__*/React.createElement(Photos, this.props), this.props && chat && this.props.userName === chat.admin.username && /*#__PURE__*/React.createElement(\"div\", null, this.props.renderOptionsSettings ? this.props.renderOptionsSettings(this.props, chat) : /*#__PURE__*/React.createElement(Options, this.props))));\n  };\n\n  return ChatSettingsContainer;\n}(Component);\n\nvar styles$8 = {\n  settingsContainer: {\n    height: '100%',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    borderLeft: '1px solid #afafaf',\n    backgroundColor: 'white'\n  },\n  filler: {\n    display: 'flex',\n    width: '90%',\n    paddingLeft: '5%',\n    borderLeft: '1px solid #afafaf'\n  }\n};\n\nvar ChatSettingsDrawer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatSettingsDrawer, _Component);\n\n  function ChatSettingsDrawer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  var _proto = ChatSettingsDrawer.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SettingOutlined, {\n      onClick: function onClick() {\n        return _this2.setState({\n          isOpen: true\n        });\n      },\n      style: {\n        color: 'rgb(24, 144, 255)',\n        outline: 'none'\n      }\n    }), this.state.isOpen && /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$9.drawerContainer\n    }, /*#__PURE__*/React.createElement(CloseOutlined, {\n      style: styles$9.closeIcon,\n      onClick: function onClick() {\n        return _this2.setState({\n          isOpen: false\n        });\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$9.titleContainer\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$9.titleText\n    }, \"Chat Settings\")), /*#__PURE__*/React.createElement(ChatSettingsContainer, this.props)));\n  };\n\n  return ChatSettingsDrawer;\n}(Component);\n\nvar styles$9 = {\n  drawerContainer: {\n    position: 'fixed',\n    zIndex: '1',\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    textAlign: 'left'\n  },\n  closeIcon: {\n    position: 'absolute',\n    left: '28px',\n    top: '32px'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '24px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl',\n  gutterWidth: 0\n});\n\nvar ChatHeader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatHeader, _Component);\n\n  function ChatHeader() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ChatHeader.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        chats = _this$props.chats,\n        activeChat = _this$props.activeChat;\n\n    if (!chats || !activeChat || !chats[activeChat]) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var chat = chats[activeChat];\n    var otherPerson = chat.people.find(function (person) {\n      return person.person.username !== _this.props.userName;\n    });\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"ce-chat-title\",\n      style: styles$a.titleSection\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      sm: 0,\n      style: _extends({}, styles$a.mobileOptiom, {\n        left: '6px'\n      }),\n      className: \"ce-chat-list-mobile-option\"\n    }, /*#__PURE__*/React.createElement(ChatListDrawer, this.props)), /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      sm: 12,\n      style: styles$a.titleContainer,\n      className: \"ce-chat-title-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$a.titleText,\n      className: \"ce-chat-title-text\"\n    }, chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$a.subtitleText,\n      className: \"ce-chat-subtitle-text\"\n    }, chat.last_message.created && chat.last_message.created.length > 0 ? \"Active \" + timeSinceDate(chat.last_message.created) : 'Say hello!')), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      sm: 0,\n      style: _extends({}, styles$a.mobileOptiom, {\n        right: '6px'\n      }),\n      className: \"ce-chat-settings-mobile-option\"\n    }, /*#__PURE__*/React.createElement(ChatSettingsDrawer, this.props)));\n  };\n\n  return ChatHeader;\n}(Component);\n\nvar styles$a = {\n  titleSection: {\n    position: 'absolute',\n    top: '0px',\n    width: '100%',\n    zIndex: '1',\n    backgroundColor: 'rgb(256, 256, 256, 0.92)'\n  },\n  mobileOptiom: {\n    width: '100%',\n    top: '32px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)',\n    overflow: 'hidden'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '18px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  },\n  subtitleText: {\n    fontSize: '12px'\n  }\n};\n\nvar AuthFail = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AuthFail, _Component);\n\n  function AuthFail() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = AuthFail.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%',\n        textAlign: 'center'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '40%',\n        paddingTop: '25vh'\n      },\n      src: \"https://chat-engine-assets.s3.amazonaws.com/denied.svg\",\n      alt: \"welcome-to-chat-engine\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '18px',\n        paddingTop: '24px',\n        width: '75%',\n        paddingLeft: '12.5%'\n      }\n    }, \"Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://chatengine.io\"\n    }, \"chatengine.io\")));\n  };\n\n  return AuthFail;\n}(Component);\n\nvar Loading = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Loading, _Component);\n\n  function Loading() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Loading.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: '1',\n        bottom: '66px',\n        left: 'calc(50% - 78px)',\n        position: 'absolute',\n        fontSize: '15px',\n        padding: '10px 22px',\n        color: 'white',\n        backgroundColor: '#fa8c16',\n        borderRadius: '1.3em'\n      },\n      id: \"ce-connecting-popup\"\n    }, /*#__PURE__*/React.createElement(SyncOutlined, {\n      spin: true\n    }), ' ', \"Connecting\");\n  };\n\n  return Loading;\n}(Component);\n\nvar Welcome = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Welcome, _Component);\n\n  function Welcome() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Welcome.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%',\n        textAlign: 'center'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '60%',\n        paddingTop: '33vh'\n      },\n      src: \"https://chat-engine-assets.s3.amazonaws.com/welcome.svg\",\n      alt: \"welcome-to-chat-engine\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '18px',\n        paddingTop: '24px',\n        width: '75%',\n        paddingLeft: '12.5%'\n      }\n    }, \"Fill out the \\\"New Chat\\\" form to get started.\"));\n  };\n\n  return Welcome;\n}(Component);\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar suffix = ['st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st'];\n\nvar DatePartition = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(DatePartition, _Component);\n\n  function DatePartition() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DatePartition.prototype;\n\n  _proto.getDate = function getDate(date) {\n    return date ? date.substr(0, 10) : null;\n  };\n\n  _proto.formatDate = function formatDate(date_time) {\n    if (!date_time) return '';\n    var year = date_time.substr(0, 4);\n    var month = months[parseInt(date_time.substr(5, 2)) - 1];\n    var day = date_time.substr(8, 2);\n    var dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1];\n    var time = date_time.substr(11, 5);\n    var timeSuffix = '';\n\n    if (parseInt(time.substr(0, 2)) >= 12) {\n      if (parseInt(time.substr(0, 2)) > 12) {\n        time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2);\n      }\n\n      timeSuffix = 'PM';\n    } else {\n      timeSuffix = 'AM';\n    }\n\n    return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        lastCreated = _this$props.lastCreated,\n        created = _this$props.created;\n    var lastDate = this.getDate(lastCreated);\n    var thisDate = this.getDate(created);\n\n    if (lastCreated && lastDate === thisDate) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$b.dateText,\n      className: \"ce-message-date-text\"\n    }, this.formatDate(created));\n  };\n\n  return DatePartition;\n}(Component);\n\nvar styles$b = {\n  dateText: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '4px',\n    paddingBottom: '10px',\n    fontSize: '15px',\n    color: 'rgba(0, 0, 0, .40)'\n  }\n};\n\nvar _loadingContainer, _thumbnail;\n\nvar Thumbnail$1 = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Thumbnail, _Component);\n\n  function Thumbnail() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Thumbnail.prototype;\n\n  _proto.render = function render() {\n    var attachment = this.props.attachment;\n\n    if (!attachment) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: styles$c.loadingContainer\n      }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n        style: {\n          color: 'white',\n          padding: '4px',\n          fontSize: '28px'\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"img\", {\n      style: styles$c.thumbnail,\n      src: attachment.file,\n      alt: 'thumb-nail'\n    });\n  };\n\n  return Thumbnail;\n}(Component);\n\nvar styles$c = {\n  loadingContainer: (_loadingContainer = {\n    width: '100%',\n    cursor: 'pointer',\n    textAlign: 'right',\n    display: 'inline-block',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    marginRight: '2px',\n    height: '30vw'\n  }, _loadingContainer[\"width\"] = '30vw', _loadingContainer.maxHeight = '200px', _loadingContainer.maxWidth = '200px', _loadingContainer.minHeight = '100px', _loadingContainer.minWidth = '100px', _loadingContainer.backgroundColor = '#d9d9d9', _loadingContainer),\n  thumbnail: (_thumbnail = {\n    width: '100%',\n    cursor: 'pointer',\n    textAlign: 'right',\n    display: 'inline',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    paddingRight: '2px',\n    height: '30vw'\n  }, _thumbnail[\"width\"] = '30vw', _thumbnail.maxHeight = '200px', _thumbnail.maxWidth = '200px', _thumbnail.minHeight = '100px', _thumbnail.minWidth = '100px', _thumbnail)\n};\nvar colors = ['#D64045', '#5B3000', '#00CC99', '#467599', '#1D3354', '#8F250C', '#6153CC', '#961D4E', '#A29F15', '#0CAADC', '#FF5154', '#FA7921', '#688E26', '#550527', '#A10702', '#FF1053', '#6C6EA0', '#100B00'];\n\nfunction stringToNumber(str) {\n  var sum = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    sum = sum + str.charCodeAt(i) * i - 97;\n  }\n\n  return sum;\n}\n\nfunction stringToColor(str) {\n  if (!str) {\n    return 'black';\n  } else {\n    return colors[stringToNumber(str) % colors.length];\n  }\n}\n\nvar Dot = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Dot, _Component);\n\n  function Dot() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      avatar: ''\n    };\n    return _this;\n  }\n\n  var _proto = Dot.prototype;\n\n  _proto.updateImg = function updateImg() {\n    var avatar = this.props.avatar;\n    avatar = avatar && avatar !== null ? avatar : '';\n\n    if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n      this.setState({\n        avatar: avatar\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateImg();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.updateImg();\n  };\n\n  _proto.render = function render() {\n    var username = this.props.username;\n    var color = stringToColor(username);\n    var customStyle = this.props.style ? this.props.style : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-dot\",\n      style: _extends({}, styles$d.dot, customStyle, {\n        backgroundColor: this.state.avatar ? 'white' : color,\n        backgroundImage: this.state.avatar && \"url(\" + this.state.avatar + \")\",\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: '14px'\n      })\n    });\n  };\n\n  return Dot;\n}(Component);\n\nvar styles$d = {\n  dot: {\n    width: '13px',\n    height: '13px',\n    borderRadius: '13px',\n    textAlign: 'center'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar Message = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Message, _Component);\n\n  function Message() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  var _proto = Message.prototype;\n\n  _proto.renderReads = function renderReads() {\n    var _this$props = this.props,\n        chat = _this$props.chat,\n        message = _this$props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (chatPerson, index) {\n      if (message.id === chatPerson.last_read) {\n        return /*#__PURE__*/React.createElement(Dot, {\n          key: \"read_\" + index,\n          avatar: chatPerson.person.avatar,\n          username: chatPerson.person.username,\n          style: {\n            \"float\": 'right',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  };\n\n  _proto.renderAttachments = function renderAttachments() {\n    var message = this.props.message;\n    var attachments = message && message.attachments ? message.attachments : [];\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        attachment: attachment,\n        key: \"attachment_\" + index\n      });\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        lastMessage = _this$props2.lastMessage,\n        message = _this$props2.message,\n        nextMessage = _this$props2.nextMessage;\n\n    if (!message) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var attachments = message && message.attachments && message.attachments;\n    var topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n    var bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n    var borderRadius = \"1.3em \" + topRightRadius + \" \" + bottomRightRadius + \" 1.3em\";\n    var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-message-row ce-my-message\",\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          selected: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          selected: false\n        });\n      },\n      style: {\n        width: '100%',\n        textAlign: 'right',\n        paddingBottom: paddingBottom\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'auto'\n      },\n      className: \"ce-my-message-attachments-container\"\n    }, this.renderAttachments()), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingRight: '2px'\n      },\n      className: \"ce-message-bubble-row ce-my-message-bubble-row\"\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 1,\n      sm: 2,\n      md: 3\n    }), /*#__PURE__*/React.createElement(Col, {\n      xs: 11,\n      sm: 10,\n      md: 9\n    }, !attachments || message.text && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-message-bubble ce-my-message-bubble\",\n      style: _extends({}, styles$e.myMessage, {\n        borderRadius: borderRadius\n      })\n    }, message.text)), /*#__PURE__*/React.createElement(Col, {\n      xs: 1,\n      sm: 2,\n      md: 3\n    }), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"ce-reads-row ce-my-reads-row\"\n    }, this.renderReads())));\n  };\n\n  return Message;\n}(Component);\n\nvar styles$e = {\n  myMessage: {\n    color: 'white',\n    cursor: 'pointer',\n    \"float\": 'right',\n    textAlign: 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: 'rgb(24, 144, 255)'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar TheirMessage = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TheirMessage, _Component);\n\n  function TheirMessage() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  var _proto = TheirMessage.prototype;\n\n  _proto.renderReads = function renderReads() {\n    var _this$props = this.props,\n        chat = _this$props.chat,\n        message = _this$props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (person, index) {\n      if (message.id === person.last_read) {\n        return /*#__PURE__*/React.createElement(Dot$1, {\n          key: \"read_\" + index,\n          avatar: person.person.avatar,\n          username: person.person.username,\n          style: {\n            \"float\": 'left',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  };\n\n  _proto.renderAttachments = function renderAttachments() {\n    var message = this.props.message;\n    var attachments = message && message.attachments ? this.props.message.attachments : [];\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        attachment: attachment,\n        key: \"attachment_\" + index\n      });\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        lastMessage = _this$props2.lastMessage,\n        message = _this$props2.message,\n        nextMessage = _this$props2.nextMessage;\n\n    if (!message) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var attachments = message && message.attachments && message.attachments;\n    var topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n    var bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n    var borderRadius = topLeftRadius + \" 1.3em 1.3em \" + bottomLeftRadius;\n    var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingBottom: paddingBottom\n      },\n      className: \"ce-message-row ce-their-message\"\n    }, (!lastMessage || lastMessage.sender_username !== message.sender_username) && /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$f.nameText,\n      className: \"ce-their-message-sender\"\n    }, message.sender_username), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingLeft: '2px'\n      },\n      className: \"ce-their-message-row\"\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 11,\n      sm: 10,\n      md: 9\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '0px'\n      },\n      className: \"ce-their-message-avatar\"\n    }, (!nextMessage || nextMessage.sender_username !== message.sender_username) && /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: message.sender_username,\n      avatar: message.sender && message.sender.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'auto',\n        paddingLeft: '50px'\n      },\n      className: \"ce-their-message-attachments-container\"\n    }, this.renderAttachments()), !attachments || message.text && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingLeft: '48px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-message-bubble ce-their-message-bubble\",\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          selected: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          selected: false\n        });\n      },\n      style: _extends({}, styles$f.theirMessage, {\n        borderRadius: borderRadius\n      })\n    }, message.text))), /*#__PURE__*/React.createElement(Col, {\n      xs: 9,\n      style: {\n        marginLeft: '48px'\n      },\n      className: \"ce-reads-row ce-their-reads-row\"\n    }, this.renderReads())));\n  };\n\n  return TheirMessage;\n}(Component);\n\nvar styles$f = {\n  theirMessage: {\n    cusor: 'auto',\n    color: 'black',\n    \"float\": 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#f1f0f0'\n  },\n  nameText: {\n    paddingLeft: '62px',\n    paddingBottom: '2px',\n    color: 'rgba(0, 0, 0, .40)',\n    fontSize: '15px'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar SendingMessage = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(SendingMessage, _Component);\n\n  function SendingMessage() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  var _proto = SendingMessage.prototype;\n\n  _proto.renderReads = function renderReads() {\n    var _this$props = this.props,\n        chat = _this$props.chat,\n        message = _this$props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (chatPerson, index) {\n      if (message.id === chatPerson.last_read) {\n        return /*#__PURE__*/React.createElement(Dot, {\n          key: \"read_\" + index,\n          avatar: chatPerson.person.avatar,\n          username: chatPerson.person.username,\n          style: {\n            \"float\": 'right',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  };\n\n  _proto.renderAttachments = function renderAttachments(attachments) {\n    return attachments.map(function (a, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        key: \"sending-file-\" + index\n      });\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        lastMessage = _this$props2.lastMessage,\n        message = _this$props2.message,\n        nextMessage = _this$props2.nextMessage;\n\n    if (!message) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var attachments = message && message.attachments ? message.attachments : [];\n    var topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n    var bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n    var borderRadius = \"1.3em \" + topRightRadius + \" \" + bottomRightRadius + \" 1.3em\";\n    var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-message-row ce-my-message ce-my-message-sending\",\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          selected: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          selected: false\n        });\n      },\n      style: {\n        width: '100%',\n        textAlign: 'right',\n        paddingBottom: paddingBottom\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'auto'\n      },\n      className: \"ce-my-message-attachments-container\"\n    }, this.renderAttachments(attachments)), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingRight: '2px'\n      },\n      className: \"ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row\"\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 1,\n      sm: 2,\n      md: 3\n    }), /*#__PURE__*/React.createElement(Col, {\n      xs: 11,\n      sm: 10,\n      md: 9\n    }, message.text && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-message-bubble ce-my-message-bubble\",\n      style: _extends({}, styles$g.myMessage, {\n        borderRadius: borderRadius\n      })\n    }, message.text)), /*#__PURE__*/React.createElement(Col, {\n      xs: 1,\n      sm: 2,\n      md: 3\n    })));\n  };\n\n  return SendingMessage;\n}(Component);\n\nvar styles$g = {\n  myMessage: {\n    color: 'white',\n    cursor: 'pointer',\n    \"float\": 'right',\n    textAlign: 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#40a9ff'\n  }\n};\n\nvar Message$1 = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Message$1, _Component);\n\n  function Message$1() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  var _proto = Message$1.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        lastMessage = _this$props.lastMessage,\n        message = _this$props.message,\n        sending = _this$props.sending,\n        nextMessage = _this$props.nextMessage;\n    var _this$props2 = this.props,\n        chats = _this$props2.chats,\n        activeChat = _this$props2.activeChat;\n\n    if (!message || !chats || !activeChat || !chats[activeChat]) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var chat = chats[activeChat];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-message-and-date\"\n    }, !sending && /*#__PURE__*/React.createElement(DatePartition, {\n      lastCreated: lastMessage ? lastMessage.created : null,\n      created: message.created\n    }), sending ? /*#__PURE__*/React.createElement(SendingMessage, {\n      chat: chat,\n      creds: this.props,\n      lastMessage: lastMessage,\n      message: message,\n      nextMessage: nextMessage\n    }) : /*#__PURE__*/React.createElement(\"div\", null, !sending && message.sender_username === this.props.userName ? /*#__PURE__*/React.createElement(Message, {\n      chat: chat,\n      creds: this.props,\n      lastMessage: lastMessage,\n      message: message,\n      nextMessage: nextMessage\n    }) : /*#__PURE__*/React.createElement(TheirMessage, {\n      chat: chat,\n      creds: this.props,\n      lastMessage: lastMessage,\n      message: message,\n      nextMessage: nextMessage\n    })));\n  };\n\n  return Message$1;\n}(Component);\n\nvar FileRow = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FileRow, _React$Component);\n\n  function FileRow() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = FileRow.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '12px 6px',\n        display: 'inline'\n      },\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: styles$h.imageSquare,\n      alt: this.props.file ? this.props.file.name : '',\n      src: URL.createObjectURL(this.props.file)\n    }), this.state.hovered && /*#__PURE__*/React.createElement(CloseCircleTwoTone, {\n      style: styles$h.closeIcon,\n      onClick: function onClick() {\n        return _this2.props.onRemove && _this2.props.onRemove();\n      }\n    }));\n  };\n\n  return FileRow;\n}(React.Component);\n\nvar styles$h = {\n  imageSquare: {\n    height: '108px',\n    width: '108px',\n    border: '1px solid #afafaf',\n    borderRadius: '8px',\n    objectFit: 'cover',\n    display: 'inline'\n  },\n  closeIcon: {\n    position: 'relative',\n    bottom: '91px',\n    right: '20px',\n    width: '0px',\n    cursor: 'pointer'\n  }\n};\n\nvar FileRow$1 = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FileRow$1, _React$Component);\n\n  function FileRow$1() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = FileRow$1.prototype;\n\n  _proto.renderFiles = function renderFiles() {\n    var _this = this;\n\n    return this.props.files.map(function (file, index) {\n      return /*#__PURE__*/React.createElement(FileRow, {\n        file: file,\n        key: \"thumb_\" + index,\n        onRemove: function onRemove() {\n          return _this.props.onRemove && _this.props.onRemove(index);\n        }\n      });\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 'calc(100% - 24px)',\n        paddingLeft: '12px'\n      }\n    }, this.renderFiles());\n  };\n\n  return FileRow$1;\n}(React.Component);\n\nvar ImagesInput = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ImagesInput, _React$Component);\n\n  function ImagesInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      hovered: false,\n      files: []\n    };\n    return _this;\n  }\n\n  var _proto = ImagesInput.prototype;\n\n  _proto.onSelect = function onSelect(event) {\n    var files = [];\n    var indexes = [].concat(Array(event.target.files.length).keys());\n    indexes.map(function (i, index) {\n      var file = event.target.files[index];\n\n      if (file) {\n        files.push(file);\n      }\n    });\n    this.props.onSelectFiles && this.props.onSelectFiles(files);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"uploader\",\n      encType: \"multipart/form-data\",\n      style: {\n        height: '0px'\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"files\",\n      id: \"upload-document-button\"\n    }, /*#__PURE__*/React.createElement(PaperClipOutlined, {\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      },\n      style: _extends({}, {\n        cursor: 'pointer',\n        position: 'absolute',\n        bottom: '20px',\n        right: '63px',\n        fontSize: '18px'\n      }, {\n        color: this.state.hovered ? '#69c0ff' : '#1890ff'\n      })\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      multiple: true,\n      id: \"files\",\n      accept: \"image/x-png,image/gif,image/jpeg\",\n      style: {\n        visibility: \"hidden\"\n      },\n      type: \"file\",\n      onChange: function onChange(e) {\n        return _this2.onSelect(e);\n      }\n    }));\n  };\n\n  return ImagesInput;\n}(React.Component);\n\nvar NewMessageForm$1 = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(NewMessageForm, _React$Component);\n\n  function NewMessageForm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      trigger: 0,\n      mod: 3,\n      value: '',\n      attachments: []\n    };\n    return _this;\n  }\n\n  var _proto = NewMessageForm.prototype;\n\n  _proto.onRemove = function onRemove(index) {\n    var attachments = this.state.attachments;\n    attachments.splice(index, 1);\n    this.setState({\n      attachments: attachments\n    });\n  };\n\n  _proto.handleChange = function handleChange(event) {\n    this.setState({\n      value: event.target.value,\n      trigger: (this.state.trigger + 1) % this.state.mod\n    });\n\n    if (this.state.trigger === 1) {\n      isTyping$1(this.props, this.props.activeChat);\n    }\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var attachments = this.state.attachments;\n    var text = this.state.value.trim();\n    var custom_json = {\n      sender_id: Date.now().toString()\n    };\n    var sender_username = this.props.userName;\n    var data = {\n      text: text,\n      attachments: attachments,\n      custom_json: custom_json,\n      sender_username: sender_username,\n      chat: this.props.activeChat\n    };\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage$1(this.props, this.props.activeChat, data, function (data) {});\n    }\n\n    this.props.sendingMessage && this.props.sendingMessage(data);\n    this.setState({\n      value: '',\n      attachments: []\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"msg-form-container\",\n      style: styles$i.NewMessageFormContainer,\n      className: \"ce-message-form-container\"\n    }, /*#__PURE__*/React.createElement(FileRow$1, {\n      files: this.state.attachments,\n      onRemove: function onRemove(i) {\n        return _this2.onRemove(i);\n      }\n    }), /*#__PURE__*/React.createElement(ImagesInput, {\n      onSelectFiles: function onSelectFiles(attachments) {\n        return _this2.setState({\n          attachments: attachments\n        });\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      className: \"ce-message-form\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$i.inputContainer,\n      className: \"ce-message-input-form\"\n    }, /*#__PURE__*/React.createElement(TextAreaInput$1, {\n      value: this.state.value,\n      label: \"Send a message...\",\n      handleChange: this.handleChange.bind(this),\n      onSubmit: this.handleSubmit.bind(this)\n    }), /*#__PURE__*/React.createElement(Button$1, {\n      icon: \"send\",\n      type: \"submit\",\n      style: {\n        position: 'absolute',\n        bottom: '10px',\n        right: '6px'\n      }\n    }))));\n  };\n\n  return NewMessageForm;\n}(React.Component);\n\nvar styles$i = {\n  NewMessageFormContainer: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    minHeight: '36px',\n    paddingTop: '10px',\n    paddingBottom: '6px'\n  }\n};\n\nvar ChatFeed = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatFeed, _Component);\n\n  function ChatFeed() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ChatFeed.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: stringToColor(this.props.username),\n        padding: '2px',\n        paddingLeft: '12px'\n      }\n    }, this.props.username + \" is typing...\");\n  };\n\n  return ChatFeed;\n}(Component);\n\nvar ChatFeed$1 = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ChatFeed$1, _Component);\n\n  function ChatFeed$1() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      duration: 0\n    };\n    return _this;\n  }\n\n  var _proto = ChatFeed$1.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    setTimeout(function () {\n      _this2.setState({\n        duration: 100\n      });\n    }, 3000);\n  };\n\n  _proto.renderTypers = function renderTypers() {\n    var _this$props = this.props,\n        typingData = _this$props.typingData,\n        activeChat = _this$props.activeChat;\n    var typers = typingData && typingData[activeChat] ? typingData[activeChat] : [];\n\n    if (this.props.renderIsTyping) {\n      return this.props.renderIsTyping(typers);\n    }\n\n    return typers.map(function (username, index) {\n      return /*#__PURE__*/React.createElement(ChatFeed, {\n        key: \"typer_\" + index,\n        username: username\n      });\n    });\n  };\n\n  _proto.renderMessages = function renderMessages() {\n    var _this3 = this;\n\n    var _this$props2 = this.props,\n        messages = _this$props2.messages,\n        chats = _this$props2.chats,\n        activeChat = _this$props2.activeChat;\n    var chat = chats && chats[activeChat];\n    var keys = Object.keys(messages);\n    return keys.map(function (key, index) {\n      var message = messages[key];\n      var lastMessageKey = index === 0 ? null : keys[index - 1];\n      var nextMessageKey = index === keys.length - 1 ? null : keys[index + 1];\n\n      if (_this3.props.renderMessageBubble) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"message_\" + index\n        }, _this3.props.renderMessageBubble(_this3.props, chat, messages[lastMessageKey], message, messages[nextMessageKey]));\n      }\n\n      return /*#__PURE__*/React.createElement(Message$1, _extends({\n        key: \"message_\" + index\n      }, _this3.props, {\n        chat: chat,\n        message: message,\n        lastMessage: messages[lastMessageKey],\n        nextMessage: messages[nextMessageKey]\n      }));\n    });\n  };\n\n  _proto.renderSendingMessages = function renderSendingMessages() {\n    var _this4 = this;\n\n    var _this$props3 = this.props,\n        sendingMessages = _this$props3.sendingMessages,\n        chats = _this$props3.chats,\n        activeChat = _this$props3.activeChat;\n    var keys = Object.keys(sendingMessages);\n    var chat = chats && chats[activeChat];\n    return keys.map(function (key, index) {\n      var message = sendingMessages[key];\n      var lastMessageKey = index === 0 ? null : keys[index - 1];\n      var nextMessageKey = index === keys.length - 1 ? null : keys[index + 1];\n\n      if (message && message.chat === _this4.props.activeChat) {\n        return /*#__PURE__*/React.createElement(Message$1, _extends({\n          sending: true,\n          key: \"sending-msg-\" + index\n        }, _this4.props, {\n          chat: chat,\n          message: message,\n          lastMessage: sendingMessages[lastMessageKey],\n          nextMessage: sendingMessages[nextMessageKey]\n        }));\n      }\n    });\n  };\n\n  _proto.scrollToBottom = function scrollToBottom() {\n    animateScroll.scrollToBottom({\n      duration: this.state.duration,\n      containerId: \"ce-feed-container\"\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (!_.isEmpty(this.props.messages)) {\n      this.scrollToBottom();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props4 = this.props,\n        chats = _this$props4.chats,\n        creds = _this$props4.creds,\n        activeChat = _this$props4.activeChat;\n    var chat = chats && chats[activeChat];\n\n    if (creds === undefined) {\n      return /*#__PURE__*/React.createElement(AuthFail, null);\n    }\n\n    if (creds && chats !== null && _.isEmpty(chats)) {\n      return /*#__PURE__*/React.createElement(Welcome, null);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-chat-feed\",\n      style: {\n        display: 'flex',\n        maxHeight: '100vh',\n        backgroundColor: '#f0f0f0'\n      }\n    }, this.props.connecting && /*#__PURE__*/React.createElement(Loading, null), this.props.renderChatHeader ? this.props.renderChatHeader(chat) : /*#__PURE__*/React.createElement(ChatHeader, this.props), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ce-feed-container\",\n      style: styles$j.feedContainer,\n      className: \"ce-chat-feed-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '88px'\n      },\n      className: \"ce-feed-container-top\"\n    }), this.renderMessages(), this.renderSendingMessages(), this.renderTypers(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '54px'\n      },\n      className: \"ce-feed-container-bottom\"\n    })), this.props.renderNewMessageForm ? this.props.renderNewMessageForm(this.props, activeChat) : /*#__PURE__*/React.createElement(NewMessageForm$1, this.props));\n  };\n\n  return ChatFeed$1;\n}(Component);\n\nvar styles$j = {\n  feedContainer: {\n    position: 'absolute',\n    top: '0px',\n    height: '100%',\n    width: '100%',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    backgroundColor: 'white',\n    borderRight: '1px solid rgb(175, 175, 175)'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl',\n  gutterWidth: 0\n});\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(App, _Component);\n\n  function App() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      connecting: true,\n      creds: null,\n      chats: null,\n      messages: {},\n      sendingMessages: {},\n      activeChat: null,\n      typingCounter: {},\n      typingData: {},\n      onChatClick: function onChatClick(chatId) {\n        return _this.setActiveChat(chatId);\n      },\n      sendingMessage: function sendingMessage(chatId) {\n        return _this.sendingMessage(chatId);\n      }\n    };\n    return _this;\n  }\n\n  var _proto = App.prototype;\n\n  _proto.sortChats = function sortChats(chats) {\n    return Object.values(chats).sort(function (a, b) {\n      var aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created);\n      var bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created);\n      return new Date(bDate) - new Date(aDate);\n    });\n  };\n\n  _proto.onConnect = function onConnect(creds) {\n    this.setState({\n      creds: creds,\n      connecting: false\n    });\n    getChats(creds, function () {});\n    this.props.onConnect && this.props.onConnect(creds);\n  };\n\n  _proto.onFailAuth = function onFailAuth(creds) {\n    this.setState({\n      creds: undefined\n    });\n    this.props.onFailAuth && this.props.onFailAuth(creds);\n  };\n\n  _proto.setActiveChat = function setActiveChat(chatId) {\n    this.setState({\n      activeChat: chatId\n    });\n    getMessages(this.state.creds, chatId, function () {});\n  };\n\n  _proto.onGetChats = function onGetChats(chats) {\n    chats = this.sortChats(chats);\n\n    if (chats.length > 0 && this.state.activeChat === null) {\n      this.setActiveChat(chats[0].id);\n    }\n\n    this.setState({\n      chats: _.mapKeys(chats, 'id')\n    });\n    this.props.onGetChats && this.props.onGetChats(chats);\n  };\n\n  _proto.onNewChat = function onNewChat(chat) {\n    var chats = this.state.chats;\n\n    if (chats) {\n      chats[chat.id] = chat;\n      this.setState({\n        chats: chats\n      });\n      this.setActiveChat(chat.id);\n    }\n\n    this.props.onNewChat && this.props.onNewChat(chat);\n  };\n\n  _proto.onEditChat = function onEditChat(chat) {\n    var chats = this.state.chats;\n\n    if (chats) {\n      chats[chat.id] = chat;\n      this.setState({\n        chats: chats\n      });\n    }\n\n    this.props.onEditChat && this.props.onEditChat(chat);\n  };\n\n  _proto.onDeleteChat = function onDeleteChat(chat) {\n    var chats = this.state.chats;\n\n    if (chats) {\n      chats[chat.id] = undefined;\n      this.setState({\n        chats: chats\n      });\n\n      if (!_.isEmpty(chats)) {\n        var sortedChats = this.sortChats(chats);\n        this.setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0);\n      }\n    }\n\n    this.props.onDeleteChat && this.props.onDeleteChat(chat);\n  };\n\n  _proto.onGetMessages = function onGetMessages(chatId, messages) {\n    this.setState({\n      messages: _.mapKeys(messages, 'id')\n    });\n\n    if (messages.length > 0) {\n      var messageId = messages[messages.length - 1].id;\n      readMessage(this.state.creds, this.state.activeChat, messageId, function () {});\n    }\n\n    this.props.onGetMessages && this.props.onGetMessages(chatId, messages);\n  };\n\n  _proto.sendingMessage = function sendingMessage(message) {\n    var _extends2;\n\n    this.setState({\n      sendingMessages: _extends({}, this.state.sendingMessages, (_extends2 = {}, _extends2[message.custom_json.sender_id] = message, _extends2))\n    });\n  };\n\n  _proto.onNewMessage = function onNewMessage(chatId, message) {\n    var _this$state = this.state,\n        sendingMessages = _this$state.sendingMessages,\n        messages = _this$state.messages;\n\n    if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n      sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined;\n      this.setState({\n        sendingMessages: sendingMessages\n      });\n    }\n\n    if (chatId === this.state.activeChat) {\n      messages[message.id] = message;\n      this.setState({\n        messages: messages\n      });\n    }\n\n    readMessage(this.state.creds, this.state.activeChat, message.id);\n    this.props.onNewMessage && this.props.onNewMessage(chatId, message);\n  };\n\n  _proto.onEditMessage = function onEditMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      var messages = this.state.messages;\n      messages[message.id] = message;\n      this.setState({\n        messages: messages\n      });\n    }\n\n    this.props.onEditMessage && this.props.onEditMessage(chatId, message);\n  };\n\n  _proto.onDeleteMessage = function onDeleteMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      var messages = this.state.messages;\n      messages[message.id] = undefined;\n      this.setState({\n        messages: messages\n      });\n    }\n\n    this.props.onDeleteMessage && this.props.onDeleteMessage(chatId, message);\n  };\n\n  _proto.onTyping = function onTyping(chatId, person) {\n    var _this2 = this;\n\n    if (this.state.typingCounter[chatId] && this.state.typingCounter[chatId][person]) {\n      var _extends3, _extends4;\n\n      this.setState(_extends({}, this.state, {\n        typingCounter: _extends({}, this.state.typingCounter, (_extends4 = {}, _extends4[chatId] = _extends({}, this.state.typingCounter[chatId], (_extends3 = {}, _extends3[person] = this.state.typingCounter[chatId][person] + 1, _extends3)), _extends4))\n      }));\n    } else {\n      var _extends5, _extends6;\n\n      this.setState(_extends({}, this.state, {\n        typingCounter: _extends({}, this.state.typingCounter, (_extends6 = {}, _extends6[chatId] = _extends({}, this.state.typingCounter[chatId], (_extends5 = {}, _extends5[person] = 1, _extends5)), _extends6))\n      }));\n    }\n\n    this.props.onTyping && this.props.onTyping(chatId, person);\n    setTimeout(function () {\n      var _extends7, _extends8;\n\n      _this2.setState(_extends({}, _this2.state, {\n        typingCounter: _extends({}, _this2.state.typingCounter, (_extends8 = {}, _extends8[chatId] = _extends({}, _this2.state.typingCounter[chatId], (_extends7 = {}, _extends7[person] = _this2.state.typingCounter[chatId][person] - 1, _extends7)), _extends8))\n      }));\n    }, 2500);\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    getChats(this.props);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this3 = this;\n\n    var _this$state2 = this.state,\n        typingCounter = _this$state2.typingCounter,\n        typingData = _this$state2.typingData;\n    Object.keys(typingCounter).map(function (chat) {\n      var typers = [];\n      Object.keys(typingCounter[chat]).map(function (person) {\n        if (typingCounter[chat][person] > 0) {\n          typers.push(person);\n        }\n      });\n\n      if (!typingData[chat] || typingData[chat].length !== typers.length) {\n        var _extends9;\n\n        _this3.setState(_extends({}, _this3.state, {\n          typingData: _extends({}, _this3.state.typingData, (_extends9 = {}, _extends9[chat] = typers, _extends9))\n        }));\n      }\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this4 = this;\n\n    getChats(this.props, function (chats) {\n      return _this4.onGetChats(chats);\n    });\n  };\n\n  _proto.render = function render() {\n    var _this5 = this;\n\n    var height = this.props.height;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left',\n        backgroundColor: 'white'\n      }\n    }, /*#__PURE__*/React.createElement(Socket, _extends({}, this.props, {\n      onConnect: function onConnect(props) {\n        return _this5.onConnect(props);\n      },\n      onDisconnect: function onDisconnect() {\n        return _this5.setState({\n          connecting: true\n        });\n      },\n      onFailAuth: function onFailAuth(props) {\n        return _this5.onFailAuth(props);\n      },\n      onGetChats: function onGetChats(chats) {\n        return _this5.onGetChats(chats);\n      },\n      onNewChat: function onNewChat(chat) {\n        return _this5.onNewChat(chat);\n      },\n      onEditChat: function onEditChat(chat) {\n        return _this5.onEditChat(chat);\n      },\n      onDeleteChat: function onDeleteChat(chat) {\n        return _this5.onDeleteChat(chat);\n      },\n      onAddPerson: function onAddPerson(chat) {\n        return _this5.onEditChat(chat);\n      },\n      onRemovePerson: function onRemovePerson(chat) {\n        return _this5.onEditChat(chat);\n      },\n      onTyping: function onTyping(chatId, person) {\n        return _this5.onTyping(chatId, person);\n      },\n      onGetMessages: function onGetMessages(chatId, messages) {\n        return _this5.onGetMessages(chatId, messages);\n      },\n      onNewMessage: function onNewMessage(chatId, message) {\n        return _this5.onNewMessage(chatId, message);\n      },\n      onEditMessage: function onEditMessage(chatId, message) {\n        return _this5.onEditMessage(chatId, message);\n      },\n      onDeleteMessage: function onDeleteMessage(chatId, message) {\n        return _this5.onDeleteMessage(chatId, message);\n      }\n    })), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n      xs: 0,\n      sm: 3,\n      style: {\n        height: height ? height : ''\n      }\n    }, this.props.renderChatList ? this.props.renderChatList(_extends({}, this.props, this.state)) : /*#__PURE__*/React.createElement(ChatList, _extends({}, this.props, this.state))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      style: {\n        height: height ? height : ''\n      }\n    }, this.props.renderChatFeed ? this.props.renderChatFeed(_extends({}, this.props, this.state)) : /*#__PURE__*/React.createElement(ChatFeed$1, _extends({}, this.props, this.state))), /*#__PURE__*/React.createElement(Col, {\n      xs: 0,\n      sm: 3,\n      style: {\n        height: height ? height : ''\n      }\n    }, this.props.renderChatSettings ? this.props.renderChatSettings(_extends({}, this.props, this.state)) : /*#__PURE__*/React.createElement(ChatSettingsContainer, _extends({}, this.props, this.state)))));\n  };\n\n  return App;\n}(Component);\n\nvar SocketConnector = function SocketConnector(props) {\n  if (props.hideUI) {\n    return /*#__PURE__*/React.createElement(Socket, props);\n  } else {\n    return /*#__PURE__*/React.createElement(App, props);\n  }\n};\n\nfunction isTyping(props, chatId, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/typing/\", {}, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {});\n}\n\nfunction addPerson(props, chatId, userName, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    username: userName\n  }, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('New Person Error', error);\n  });\n}\n\nfunction removePerson(props, chatId, userName, callback) {\n  axios.put(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    username: userName\n  }, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Person Error', error);\n  });\n}\n\nfunction getOtherPeople(props, chatId, successCallback, errorCallback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/others/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data);\n    successCallback && successCallback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Other People Error', error);\n    errorCallback && errorCallback();\n  });\n}\n\nfunction getMyData(props, callback) {\n  axios.get(getApiUrl(props) + \"/chats/me/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Get Myself Error', error);\n  });\n}\n\nfunction editMyData(props, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/me/\", data, {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Edit Myself Error', error);\n  });\n}\n\nfunction leaveChat(props, chatId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    headers: {\n      \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n      \"User-Name\": props.userName,\n      \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n    }\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Person Error', error);\n  });\n}\n\nvar Avatar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Avatar, _Component);\n\n  function Avatar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      avatar: ''\n    };\n    return _this;\n  }\n\n  var _proto = Avatar.prototype;\n\n  _proto.updateImg = function updateImg() {\n    var avatar = this.props.avatar;\n    avatar = avatar && avatar !== null ? avatar : '';\n\n    if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n      this.setState({\n        avatar: avatar\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateImg();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.updateImg();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        username = _this$props.username,\n        is_online = _this$props.is_online;\n    var customStyle = this.props.style ? this.props.style : {};\n    var text = username ? username.substring(0, 2).toUpperCase() : '';\n    var color = stringToColor(username);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '48px',\n        height: '48px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '0px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar\",\n      style: _extends({}, styles$k.avatar, customStyle, {\n        backgroundColor: this.state.avatar ? 'white' : color,\n        backgroundImage: this.state.avatar && \"url(\" + this.state.avatar + \")\",\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: '48px'\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-text\",\n      style: styles$k.avatarText\n    }, !this.state.avatar && text))), this.props.show_online !== false && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-status\",\n      style: _extends({}, styles$k.status, {\n        backgroundColor: is_online ? '#52c41a' : '#f5222d'\n      })\n    }));\n  };\n\n  return Avatar;\n}(Component);\n\nvar styles$k = {\n  avatar: {\n    width: '44px',\n    height: '44px',\n    borderRadius: '22px',\n    color: 'white',\n    textAlign: 'center'\n  },\n  avatarText: {\n    color: 'white',\n    paddingTop: '12px',\n    fontSize: '15px',\n    fontWeight: '600'\n  },\n  status: {\n    width: '8px',\n    height: '8px',\n    borderRadius: '100%',\n    border: '2px solid white'\n  }\n};\n\nvar _dangerButton;\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Button, _Component);\n\n  function Button() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        value = _this$props.value,\n        icon = _this$props.icon,\n        theme = _this$props.theme,\n        style = _this$props.style;\n    var customStyle = style ? style : {};\n    var hoverStyle = this.state.hovered ? styles$l.hoverButton : {};\n    var themeStyle = theme === 'danger' ? styles$l.dangerButton : styles$l.button;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: this.props.type,\n      onClick: function onClick() {\n        return _this2.props.onClick && _this2.props.onClick();\n      },\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      },\n      style: _extends({}, themeStyle, customStyle, hoverStyle),\n      className: \"ce-primary-button \" + (theme === 'danger' ? 'ce-danger-button' : '')\n    }, icon === 'plus' && /*#__PURE__*/React.createElement(PlusOutlined, null), icon === 'send' && /*#__PURE__*/React.createElement(ArrowUpOutlined, null), icon === 'delete' && /*#__PURE__*/React.createElement(DeleteOutlined, null), icon === 'user-add' && /*#__PURE__*/React.createElement(UserAddOutlined, null), value && icon ? \" \" + value : value);\n  };\n\n  return Button;\n}(Component);\n\nvar styles$l = {\n  button: {\n    color: 'white',\n    border: 'none',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: '#1890ff'\n  },\n  dangerButton: (_dangerButton = {\n    color: 'red',\n    border: 'none',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: 'white'\n  }, _dangerButton[\"border\"] = '1px solid red', _dangerButton),\n  hoverButton: {\n    opacity: '0.66'\n  }\n};\n\nvar TextInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      value: null\n    };\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var value = this.props[\"default\"];\n\n    if (value) {\n      var event = {\n        target: {\n          value: value\n        }\n      };\n      this.props.handleChange(event);\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var customStyle = this.props.style ? this.props.style : {};\n    var defaultStyle = this.state.focused ? styles$m.focusInput : styles$m.input;\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: \"ce-input ce-text-input\",\n      value: this.props.value,\n      placeholder: this.props.label,\n      style: _extends({}, defaultStyle, customStyle),\n      onBlur: function onBlur() {\n        return _this2.setState({\n          focused: false\n        });\n      },\n      onFocus: function onFocus() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      type: this.props.type ? this.props.type : \"text\",\n      onChange: function onChange(e) {\n        return _this2.props.handleChange && _this2.props.handleChange(e);\n      }\n    });\n  };\n\n  return TextInput;\n}(Component);\n\nvar styles$m = {\n  input: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #d9d9d9',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  },\n  focusInput: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #1890ff',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  }\n};\n\nvar TextAreaInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextAreaInput, _Component);\n\n  function TextAreaInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      value: null\n    };\n    return _this;\n  }\n\n  var _proto = TextAreaInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var value = this.props[\"default\"];\n\n    if (value) {\n      this.props.handleChange({\n        target: {\n          value: value\n        }\n      });\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  _proto.resize = function resize() {\n    var textarea = document.getElementById(\"msg-textarea\");\n    textarea.style.height = \"\";\n    textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.resize();\n  };\n\n  _proto.handleChange = function handleChange(e) {\n    this.resize();\n    this.props.handleChange && this.props.handleChange(e);\n  };\n\n  _proto.onKeyDown = function onKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      if (this.props.value.length > 0) {\n        this.props.onSubmit && this.props.onSubmit(e);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"msg-textarea\",\n      className: \"ce-input ce-textarea-input\",\n      rows: \"1\",\n      style: styles$n.input,\n      value: this.props.value,\n      placeholder: this.props.label,\n      onBlur: function onBlur() {\n        return _this2.setState({\n          focused: false\n        });\n      },\n      onFocus: function onFocus() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      type: this.props.type ? this.props.type : \"text\",\n      onChange: function onChange(e) {\n        return _this2.handleChange(e);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return _this2.onKeyDown(e);\n      }\n    });\n  };\n\n  return TextAreaInput;\n}(Component);\n\nvar styles$n = {\n  input: {\n    border: '1px solid white',\n    width: 'calc(100% - 64px - 24px - 44px)',\n    outline: 'none',\n    fontFamily: 'inherit',\n    fontSize: '15px',\n    paddingLeft: '12px',\n    paddingRight: '12px',\n    position: 'relative',\n    left: '12px',\n    resize: 'none'\n  }\n};\n\nvar AutoComplete = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AutoComplete, _Component);\n\n  function AutoComplete() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      showAll: false\n    };\n    return _this;\n  }\n\n  var _proto = AutoComplete.prototype;\n\n  _proto.onFocus = function onFocus() {\n    this.onChange('', true);\n    this.setState({\n      focused: true\n    });\n    this.props.onFocus && this.props.onFocus();\n  };\n\n  _proto.onBlur = function onBlur() {\n    this.setState({\n      focused: false\n    });\n    this.props.onBlur && this.props.onBlur();\n  };\n\n  _proto.onChange = function onChange(value, showAll) {\n    this.setState({\n      showAll: showAll\n    });\n    this.props.handleChange && this.props.handleChange(value);\n  };\n\n  _proto.getNames = function getNames() {\n    var _this2 = this;\n\n    var count = 0;\n    var max = this.props.max ? this.props.max : 3;\n    var results = [];\n    this.props.options.map(function (option) {\n      if (JSON.stringify(option).toLowerCase().indexOf(_this2.props.value.toLowerCase()) !== -1 && count < max) {\n        count = count + 1;\n        results.push(option);\n      }\n    });\n    return results;\n  };\n\n  _proto.renderOptions = function renderOptions() {\n    var _this3 = this;\n\n    if (!this.props.value && !this.state.showAll) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var results = this.getNames();\n    return results.map(function (option, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"option_\" + index,\n        className: \"ce-autocomplete-option\"\n      }, _this3.props.renderOption && _this3.props.renderOption(option), index === results.length - 1 && /*#__PURE__*/React.createElement(\"div\", {\n        style: styles$o.close,\n        className: \"ce-autocomplete-close\",\n        onClick: function onClick() {\n          return _this3.onChange('', false);\n        }\n      }, /*#__PURE__*/React.createElement(CloseOutlined, null)));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    var options = this.props.options;\n    var customStyle = this.props.style ? this.props.style : {};\n\n    var defaultStyle = _extends({}, styles$o.input, {\n      border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9'\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"ce-input ce-autocomplete-input\",\n      value: this.props.value,\n      placeholder: this.props.label,\n      style: _extends({}, defaultStyle, customStyle),\n      type: this.props.type ? this.props.type : \"text\",\n      onBlur: function onBlur() {\n        return _this4.onBlur();\n      },\n      onFocus: function onFocus() {\n        return _this4.onFocus();\n      },\n      onChange: function onChange(e) {\n        return _this4.onChange(e.target.value, true);\n      }\n    }), options && options.length > 0 && this.state.showAll && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-autocomplete-options\",\n      style: {\n        borderRadius: '19px',\n        border: '1px solid #afafaf',\n        overflow: 'hidden'\n      }\n    }, this.props.options && this.renderOptions()));\n  };\n\n  return AutoComplete;\n}(Component);\n\nvar styles$o = {\n  input: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  },\n  close: {\n    cursor: 'pointer',\n    textAlign: 'center',\n    padding: '8px 12px',\n    fontSize: '15px',\n    borderRadius: '24px'\n  }\n};\n\nvar ChatEngine = function ChatEngine(props) {\n  return /*#__PURE__*/React.createElement(SocketConnector, props);\n};\n\nexport { AutoComplete as AutoCompleteInput, Avatar, Button, ChatCard, ChatEngine, ChatFeed$1 as ChatFeed, ChatHeader, ChatList, ChatSettingsContainer as ChatSettings, ChatSettingsTop, Dot, ChatFeed as IsTyping, Message$1 as MessageBubble, ChatForm as NewChatForm, NewMessageForm$1 as NewMessageForm, Options as OptionsSettings, PeopleList as PeopleSettings, Photos as PhotosSettings, TextAreaInput, TextInput, addPerson, deleteChat, deleteMessage, editChat, editMessage, editMyData, getChats, getMessages, getMyData, getOtherPeople, isTyping, leaveChat, newChat, removePerson, sendMessage };","map":{"version":3,"sources":["../src/components/Socket/index.js","../src/actions/index.js","../src/actions/chats/getChats.js","../src/actions/chats/newChat.js","../src/actions/chats/editChat.js","../src/actions/chats/deleteChat.js","../src/actions/messages/getMessages.js","../src/actions/messages/sendMessage.js","../src/actions/messages/editMessage.js","../src/actions/messages/readMessage.js","../src/actions/messages/deleteMessage.js","../src/components/ChatUi/ChatList/NewChatForm/index.js","../src/components/ChatUi/Utilities/dateToString.js","../src/components/ChatUi/ChatList/ChatCard.js","../src/components/ChatUi/ChatList/index.js","../src/components/ChatUi/ChatFeed/ChatHeader/ChatListDrawer.js","../src/components/ChatUi/ChatSettings/PeopleSettings/Person.js","../src/components/ChatUi/ChatSettings/PeopleSettings/PersonForm/Option.js","../src/components/ChatUi/ChatSettings/PeopleSettings/PersonForm/index.js","../src/components/ChatUi/ChatSettings/PeopleSettings/index.js","../src/components/ChatUi/ChatSettings/PhotosSettings/Thumbnail.js","../src/components/ChatUi/ChatSettings/PhotosSettings/index.js","../src/components/ChatUi/ChatSettings/OptionsSettings/index.js","../src/components/ChatUi/ChatSettings/ChatSettingsTop/TitleForm/index.js","../src/components/ChatUi/ChatSettings/ChatSettingsTop/index.js","../src/components/ChatUi/ChatSettings/index.js","../src/components/ChatUi/ChatFeed/ChatHeader/ChatSettingsDrawer.js","../src/components/ChatUi/ChatFeed/ChatHeader/index.js","../src/components/ChatUi/ChatFeed/Steps/AuthFail.js","../src/components/ChatUi/ChatFeed/Steps/Loading.js","../src/components/ChatUi/ChatFeed/Steps/Welcome.js","../src/components/ChatUi/ChatFeed/MessageBubble/DatePartition.js","../src/components/ChatUi/ChatFeed/MessageBubble/Thumbnail.js","../src/components/ChatUi/Utilities/colorMapping.js","../src/components/ChatUi/components/Avatar/Dot.js","../src/components/ChatUi/ChatFeed/MessageBubble/MyMessage.js","../src/components/ChatUi/ChatFeed/MessageBubble/TheirMessage.js","../src/components/ChatUi/ChatFeed/MessageBubble/SendingMessage.js","../src/components/ChatUi/ChatFeed/MessageBubble/index.js","../src/components/ChatUi/ChatFeed/NewMessageForm/Thumbnail.js","../src/components/ChatUi/ChatFeed/NewMessageForm/FileRow.js","../src/components/ChatUi/ChatFeed/NewMessageForm/ImagesInput.js","../src/components/ChatUi/ChatFeed/NewMessageForm/index.js","../src/components/ChatUi/ChatFeed/IsTyping.js","../src/components/ChatUi/ChatFeed/index.js","../src/components/ChatUi/index.js","../src/components/index.js","../src/actions/typing/isTyping.js","../src/actions/people/addPerson.js","../src/actions/people/removePerson.js","../src/actions/people/getOtherPeople.js","../src/actions/people/getMyData.js","../src/actions/people/editMyData.js","../src/actions/people/leaveChat.js","../src/components/ChatUi/components/Avatar/Avatar.js","../src/components/ChatUi/components/Button/Button.js","../src/components/ChatUi/components/Input/TextInput.js","../src/components/ChatUi/components/Input/TextAreaInput.js","../src/components/ChatUi/components/Input/AutocompleteInput.js","../src/index.js"],"names":["Socket","Component","state","client","props","handleEvent","eventJSON","JSON","console","onClose","render","publicKey","projectID","userName","userPassword","userSecret","development","wsStart","rootHost","project","secret","axios","str","headers","response","callback","formdata","data","i","last_read","messageId","ChatForm","React","value","handleChange","event","handleSubmit","newChat","title","height","width","textAlign","day","date","month","year","hour","minute","second","sent","dayStr","timeStr","ChatCard","readLastMessage","chat","chat_person","extraStyle","styles","otherPerson","person","index","lastMessage","borderRadius","backgroundColor","display","daySinceSent","chatContainer","padding","paddingBottom","cursor","titleText","fontWeight","whiteSpace","overflow","messageText","color","fontSize","activeChat","border","ChatList","renderChats","chats","Object","aDate","a","bDate","b","chatListContainer","maxHeight","overflowX","borderRight","chatsContainer","newChatContainer","position","bottom","ChatListDrawer","isOpen","outline","drawerContainer","titleContainer","zIndex","top","left","closeIcon","Person","selected","onRemovePerson","removePerson","renderPersonText","creds","admin","is_online","paddingLeft","Option","focused","avatar","username","option","PersonForm","others","addPerson","getOthers","getOtherPeople","renderOption","marginBottom","PeopleList","collapsed","hovered","renderChatPeople","chatPerson","borderTop","collapseIcon","right","Thumbnail","attachment","paddingTop","id","container","image","objectFit","Photos","renderPhotos","Options","deleteChat","NewMessageForm","editChat","componentDidUpdate","ChatSettingsTop","renderOnePerson","people","renderTwoPeople","renderThreePeople","getOtherPerson","topPeople","ChatSettingsContainer","filler","settingsContainer","borderLeft","ChatSettingsDrawer","setConfiguration","maxScreenClass","gutterWidth","ChatHeader","titleSection","timeSinceDate","mobileOptiom","subtitleText","AuthFail","Loading","Welcome","months","suffix","DatePartition","getDate","formatDate","date_time","parseInt","dayDuffix","time","timeSuffix","String","lastCreated","created","lastDate","thisDate","dateText","loadingContainer","marginRight","thumbnail","paddingRight","colors","sum","stringToNumber","Dot","updateImg","componentDidMount","stringToColor","customStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","dot","Message","renderReads","message","marginLeft","renderAttachments","attachments","nextMessage","topRightRadius","bottomRightRadius","myMessage","TheirMessage","topLeftRadius","bottomLeftRadius","theirMessage","cusor","nameText","SendingMessage","sending","FileRow","URL","imageSquare","renderFiles","ImagesInput","files","onSelect","indexes","Array","file","visibility","trigger","mod","onRemove","isTyping","text","custom_json","sender_id","Date","sender_username","sendMessage","NewMessageFormContainer","inputContainer","minHeight","ChatFeed","duration","setTimeout","renderTypers","typingData","typers","renderMessages","messages","keys","lastMessageKey","nextMessageKey","renderSendingMessages","sendingMessages","scrollToBottom","animateScroll","containerId","_","feedContainer","App","connecting","typingCounter","onChatClick","sendingMessage","sortChats","onConnect","getChats","onFailAuth","undefined","setActiveChat","chatId","getMessages","onGetChats","onNewChat","onEditChat","onDeleteChat","sortedChats","onGetMessages","readMessage","onNewMessage","onEditMessage","onDeleteMessage","onTyping","SocketConnector","successCallback","errorCallback","Avatar","avatarText","status","Button","icon","theme","style","hoverStyle","themeStyle","button","dangerButton","hoverButton","opacity","TextInput","target","defaultStyle","input","boxSizing","focusInput","TextAreaInput","resize","textarea","document","Math","onKeyDown","e","fontFamily","AutoComplete","showAll","onFocus","onBlur","onChange","getNames","count","max","results","renderOptions","options","close","ChatEngine"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { WebSocket } from 'nextjs-websocket'\nexport default class Socket extends Component {\n    state = {\n        client: undefined,\n        props: null\n    }\n\n    handleEvent(event) {\n        const { props } = this\n        const eventJSON = JSON.parse(event)\n\n        if (eventJSON.action === 'login_error') {\n            console.log(\n                `Your login credentials were not correct: \\n\n                Project ID: ${props.projectID} \\n\n                Username: ${props.userName} \\n\n                User Secret: ${props.userSecret}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n            )\n            this.props.onFailAuth && this.props.onFailAuth(this.props)\n\n        } else if (eventJSON.action === 'is_typing') {\n            props.onTyping && props.onTyping(eventJSON.data.id, eventJSON.data.person)\n\n        } else if (eventJSON.action === 'new_chat') {\n            props.onNewChat && props.onNewChat(eventJSON.data)\n\n        } else if (eventJSON.action === 'edit_chat') {\n            props.onEditChat && props.onEditChat(eventJSON.data)\n\n        } else if (eventJSON.action === 'delete_chat') {\n            props.onDeleteChat && props.onDeleteChat(eventJSON.data)\n\n        } else if (eventJSON.action === 'add_person') {\n            props.onAddPerson && props.onAddPerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'remove_person') {\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'new_message') {\n            props.onNewMessage && props.onNewMessage(eventJSON.data.id, eventJSON.data.message)\n\n        } else if (eventJSON.action === 'edit_message') {\n            props.onEditMessage && props.onEditMessage(eventJSON.data.id, eventJSON.data.message)\n\n        } else if (eventJSON.action === 'delete_message') {\n            props.onDeleteMessage && props.onDeleteMessage(eventJSON.data.id, eventJSON.data.message)\n\n        }\n    }\n\n    onClose() { this.props.onDisconnect && this.props.onDisconnect() }\n\n    render() {\n        const { \n            publicKey, projectID, \n            userName, \n            userPassword, userSecret, \n            development \n        } = this.props \n        \n        const wsStart = development ? 'ws://' : 'wss://'\n        const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n        \n        const project = publicKey ? publicKey : projectID\n        const secret = userPassword ? userPassword : userSecret\n\n        return <WebSocket \n            url={`${wsStart}${rootHost}/person/?publicKey=${project}&username=${userName}&secret=${secret}`}\n            onOpen={() => this.props.onConnect && this.props.onConnect(this.props)}\n            onClose={this.onClose.bind(this)}\n            onMessage={this.handleEvent.bind(this)}\n            reconnectIntervalInMilliSeconds={3000}\n        />\n    }\n}\n","export function getApiUrl(props) { \n    if (props && props.development) {\n        return 'http://127.0.0.1:8000'\n    }\n    return 'https://api.chatengine.io'\n}\n","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function getChats(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function newChat(props, data, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/`,\n        data, \n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function editChat(props, chatId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        data, \n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function deleteChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function getMessages(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function sendMessage(props, chatId, data, callback) {\n    let formdata = new FormData()\n    \n    if (data.attachments) {\n        for (let i = 0; i < data.attachments.length; i++) { \n            formdata.append('attachments', data.attachments[i], data.attachments[i].name)\n        }\n    } else if (data.files) {\n        for (let i = 0; i < data.files.length; i++) { \n            formdata.append('attachments', data.files[i], data.files[i].name)\n        }\n    }\n\n    formdata.append('text', data.text)\n    formdata.append('sender_username', data.sender_username)\n    formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}))\n    \n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        formdata,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Send Messages Error', error)\n    });\n    \n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function editMessage(props, chatId, messageId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        data,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function readMessage(props, chatId, messageId, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { last_read: messageId },\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Send Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function deleteMessage(props, chatId, messageId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import React from 'react';\n\nimport { newChat } from 'react-chat-engine'\n\nimport { Button, TextInput } from 'react-chat-engine'\n\nexport default class ChatForm extends React.Component {\n    state = {\n        value: ''\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (this.state.value.trim().length > 0) {\n          newChat(\n            this.props, \n            { title: this.state.value },\n            () => {}\n          )\n        }\n\n        this.setState({ value: '' })\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <div style={{ height: '1px' }}>\n            <TextInput \n              label='New Chat'\n              value={this.state.value}\n              style={{ width: 'calc(100% - 48px)' }}\n              handleChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div style={{ width: '100%', textAlign: 'right' }}>\n            <Button \n              icon='plus'\n              type=\"submit\" \n            />\n          </div>\n        </form>\n      );\n    }\n}","export function timeSinceDate(date) {\n    if (!date) return ''\n\n    const day = date.substr(8,2)\n    const month = date.substr(5,2)\n    const year = date.substr(0,4)\n\n    const hour = date.substr(11,2)\n    const minute = date.substr(14,2)\n    const second = date.substr(17,2)\n\n    var sent = new Date(`${month} ${day} ${year}`)\n    sent.setHours(hour)\n    sent.setMinutes(minute)\n    sent.setSeconds(second)\n    sent = sent.toString()\n\n    const dayStr = sent.substr(0, 10)\n    const timeStr = sent.substr(15, 6)\n    return `${dayStr} at ${timeStr}`\n}\n\nexport function daySinceSent(date) {\n    if (!date) return ''\n    const day = date.substr(8,2)\n    const month = date.substr(5,2)\n    const year = date.substr(0,4)\n    const sent = new Date(`${month} ${day} ${year}`).toString()\n    return sent.substr(4, 6)\n}\n","import React, { Component } from 'react'\n\nimport _ from 'lodash'\n\nimport { daySinceSent } from '../Utilities/dateToString'\n\nclass ChatCard extends Component {\n    readLastMessage(chat) {\n        let readLastMessage = true\n        chat.people.map(chat_person => {\n            if(this.props.userName === chat_person.person.username) {\n                readLastMessage = chat.last_message.id === chat_person.last_read\n            }\n        })\n        return readLastMessage\n    }\n\n    render() {       \n        const { chat } = this.props\n        const extraStyle = this.props.activeChat === chat.id ? styles.activeChat : {}\n        const otherPerson = chat.people.find(person => person.person.username !== this.props.userName);\n        \n        if (this.props.renderChatCard) {\n            return <div key={`chat_${index}`}>{this.props.renderChatCard(chat, index)}</div>\n        }\n\n        let lastMessage = chat.last_message.text\n        if (!lastMessage) {\n            lastMessage = chat.last_message.attachments.length > 0 ?\n            `${chat.last_message.attachments.length} image${chat.last_message.attachments.length > 1 ? 's' : ''}` :\n            'Say hello!'\n        }\n\n        return (\n            <div \n                onClick={() => this.props.onChatClick(chat.id)}\n                style={{ ...styles.chatContainer, ...extraStyle }}\n                className={`ce-chat-card ${this.props.activeChat === chat.id && 'ce-active-chat-card'}`}\n            >\n                <div style={ styles.titleText } className='ce-chat-title-text'>\n                    { chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title }\n                    \n                    {\n                        !this.readLastMessage(chat) &&\n                        <div \n                            className='ce-chat-unread-dot'\n                            style={{ \n                                float: 'right',\n                                width: '12px',\n                                height: '12px',\n                                borderRadius: '6px',\n                                backgroundColor: '#1890ff',\n                                display: 'inline-block'\n                            }} \n                        />\n                    }\n                    \n                </div>\n\n                <div style={{ width: '100%' }} className='ce-chat-subtitle'>\n                    <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\n                        { lastMessage }\n                    </div>\n\n                    <div \n                        className='ce-chat-subtitle-text ce-chat-subtitle-date'\n                        style={{ ...styles.messageText, ...{ textAlign: 'right', width: '25%' } }}\n                    >\n                        { daySinceSent(chat.last_message.created) }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles={\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n         paddingBottom: '4px', \n         whiteSpace: 'nowrap', \n         overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '4px solid white',\n        borderRadius: '12px'\n    },\n}\n\nexport default ChatCard;\n","import React, { Component } from 'react'\n\nimport _ from 'lodash'\n\nimport ChatForm from './NewChatForm'\nimport ChatCard from './ChatCard'\n\nclass ChatList extends Component {\n    readLastMessage(chat) {\n        let readLastMessage = true\n        chat.people.map(chat_person => {\n            if(this.props.userName === chat_person.person.username) {\n                readLastMessage = chat.last_message.id === chat_person.last_read\n            }\n        })\n        return readLastMessage\n    }\n\n    renderChats(chats) {\n        return chats.map((chat, index) => {\n            if (!chat) return <div key={`chat_${index}`} />\n\n            if (this.props.renderChatCard) {\n                return <div key={`chat_${index}`}>{this.props.renderChatCard(chat, index)}</div>\n            } else {\n                return <ChatCard key={`chat_${index}`} {...this.props} chat={chat} />\n            }\n        })\n    }\n\n    render() {       \n        const chats = this.props.chats ? Object.values(this.props.chats) : []\n        chats.sort((a, b) => { \n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\n            return new Date(bDate) - new Date(aDate); \n        })\n\n        return (\n            <div style={styles.chatListContainer} className='ce-chat-list'>\n\n                <div style={styles.chatsContainer} className='ce-chats-container'>\n\n                    { this.renderChats(chats) } \n\n                    <div style={{ height: '64px' }} />\n\n                    {\n                        this.props.renderNewChatForm ?\n                        this.props.renderNewChatForm(this.props) :\n                        <div style={styles.newChatContainer} className='ce-chat-form-container'>\n                            <ChatForm {...this.props}  className='ce-chat-form' />\n                        </div>\n                    }\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst styles={\n    chatListContainer: { \n        height: '100%', \n        maxHeight: '100vh', \n        overflow: 'scroll', \n        overflowX: 'hidden',\n        borderRight: '1px solid #afafaf', \n        backgroundColor: 'white' \n    },\n    chatsContainer: { \n        width: '100%', \n        backgroundColor: 'white', \n        borderRadius: '0px 0px 24px 24px'\n    },\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n         paddingBottom: '4px', \n         whiteSpace: 'nowrap', \n         overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '4px solid white',\n        borderRadius: '12px'\n    },\n    newChatContainer: { \n        position: 'absolute', \n        bottom: '0px', \n        padding: '12px',\n        width: 'calc(100% - 25px)',\n        backgroundColor: 'white'\n    }\n}\n\nexport default ChatList;\n","import React, { Component } from 'react'\n\nimport { MenuOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport ChatList from '../../ChatList'\n\nexport default class ChatListDrawer extends Component {\n    state = {\n        isOpen: false\n    }\n\n    render() {\n        const chatLength = Object.keys(this.props.chats) && Object.keys(this.props.chats).length\n        return (\n            <div> \n                <MenuOutlined\n                    onClick={() => this.setState({ isOpen: true })}\n                    style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \n                />\n\n                { \n                    this.state.isOpen &&\n                    <div style={styles.drawerContainer}>\n                        <CloseOutlined\n                            style={styles.closeIcon}\n                            onClick={() => this.setState({ isOpen: false })}\n                        />\n\n                        <div style={styles.titleContainer}>\n                            <div style={styles.titleText}>\n                                My Chats\n                            </div>\n                        </div>\n\n                        <ChatList \n                            {...this.props} \n                            onChatClick={(chatId) => {\n                                this.props.onChatClick && this.props.onChatClick(chatId)\n                                this.setState({ isOpen: false })\n                            }}\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    drawerContainer: { \n        position: 'fixed',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    }\n}\n","import React, { Component } from 'react'\n\nimport { removePerson } from 'react-chat-engine'\n\nimport { Avatar, Button } from 'react-chat-engine'\n\nexport default class Person extends Component {\n    state = {\n        selected: false\n    }\n\n    onRemovePerson() {\n        removePerson(\n            this.props.creds,\n            this.props.chat.id,\n            this.props.person.username\n        )\n    }\n\n    renderPersonText(person) {\n        if (person.first_name !== null) {\n            return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\n        } else {\n            return person.username\n        }\n    }\n\n    render() {\n        const { person, chat, creds } = this.props\n\n        if (!person || !chat) { return <div /> }\n\n        const { admin } = chat\n\n        return (\n            <div \n                className='ce-person-container'\n                onMouseEnter={() => this.setState({ selected: true })}\n                onMouseLeave={() => this.setState({ selected: false })}\n            >\n                <div \n                    className='ce-person-avatar'\n                    style={{ padding: '2px', height: '0px' }}\n                >\n                    <Avatar \n                        avatar={person.avatar} \n                        username={person.username} \n                        is_online={person.is_online}\n                    />\n                </div>\n\n                <div\n                    className='ce-person-text'\n                    style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}\n                >\n                    { this.renderPersonText(person) }\n                </div>\n\n                {\n                    this.state.selected && (creds.userName === admin.username) && (person.username !== admin.username) &&\n                    <div\n                        className='ce-delete-chat' \n                        style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}\n                    >\n                        <Button \n                            theme='danger'\n                            icon='delete'\n                            onClick={() => this.onRemovePerson()}\n                        />\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Avatar } from 'react-chat-engine'\n\n\nexport default class Option extends React.Component {\n    state = {\n        focused: false\n    }\n\n    render() {\n        const { avatar, username } = this.props.person \n\n        return (\n            <div \n                onMouseEnter={() => this.setState({ focused: true })}\n                onMouseLeave={() => this.setState({ focused: false })}\n                onClick={() => this.props.onClick && this.props.onClick()}\n                style={{ ...styles.option, ...{ backgroundColor: this.state.focused ? '#f5f5f5' : 'white'} }}\n            >\n                <div>\n                    <Avatar username={username} avatar={avatar} />\n                </div>\n\n                <div style={{ display: 'flex', padding: '12px 4px' }}>\n                    {this.props.person.username}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  },\n}","import React from 'react';\n\nimport { addPerson, getOtherPeople } from 'react-chat-engine'\n\nimport { AutoCompleteInput } from 'react-chat-engine'\n\nimport Option from './Option'\n\nexport default class PersonForm extends React.Component {\n  state = {\n    value: '',\n    others: []\n  }\n\n  handleChange(value) {\n    this.setState({ value });\n  }\n\n  addPerson(name) {\n    addPerson(\n      this.props.creds,\n      this.props.chat.id,\n      name,\n      () => { \n        this.setState({ value: '' }); \n        this.getOthers(); \n      }\n    )\n  }\n\n  getOthers() {\n    getOtherPeople(\n      this.props.creds,\n      this.props.chat.id,\n      (id, others) => this.setState({ others }),\n      () => {},\n    )\n  }\n\n  renderOption(option) {\n    return <Option person={option} onClick={() => this.addPerson(option.username)} />\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: '12px' }}>\n        <AutoCompleteInput \n          style={{ width: '100%' }}\n          label='Type a username'\n          value={this.state.value}\n          options={this.state.others}\n          onFocus={() => this.getOthers()}\n          handleChange={(value) => this.handleChange(value)} \n          renderOption={(option) => this.renderOption(option)}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport Person from './Person'\nimport PersonForm from './PersonForm'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nexport default class PeopleList extends React.Component {\n    state = {\n        collapsed: false,\n        hovered: false\n    }\n\n    renderChatPeople(people, chat) {\n        return people.map((chatPerson, index) => {\n            return (\n                <Person \n                    key={`person_${index}`} \n                    person={chatPerson.person}\n                    creds={this.props} \n                    chat={chat} \n                />\n            )\n        })\n    }\n  \n    render() {\n        const { chats, activeChat } = this.props\n\n        if (!chats || !activeChat || !chats[activeChat] || chats[activeChat].is_direct_chat) { return <div /> }\n\n        const chat = chats[activeChat]\n\n        return (\n            <div style={{ borderTop: '1px solid #f0f0f0' }}>\n                <div \n                    onMouseEnter={() => this.setState({ hovered: true })}\n                    onMouseLeave={() => this.setState({ hovered: false })}\n                    onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n                    style={this.state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                    className='ce-section-title-container ce-person-title-container'\n                >\n                    <div\n                        className='ce-section-title ce-people-title'\n                        style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                        People\n                    </div>\n\n                    {\n                        this.state.collapsed ?\n                        <LeftOutlined style={styles.collapseIcon} /> :\n                        <DownOutlined style={styles.collapseIcon} />\n                    }\n                </div>\n\n                {\n                    !this.state.collapsed &&\n                    <div>\n                        <div style={{ height: '12px' }} />\n\n                        { this.renderChatPeople(chat.people, chat) }\n\n                        <div style={{ height: '12px' }} />\n\n                        {\n                            this.props && chat && this.props.userName === chat.admin.username &&\n                            <PersonForm creds={this.props} chat={chat} />\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}","import React from 'react'\n\nexport default class Thumbnail extends React.Component {\n    render() {\n        const { attachment } = this.props \n\n        if (!attachment) { return <div /> }\n\n        return (\n            <div style={styles.container} className='ce-photo-thumbnail'>\n                \n                <div style={{ paddingTop: '100%' }} />\n                \n                <img\n                    alt={attachment.id}\n                    style={styles.image}\n                    src={attachment.file}\n                    className='ce-photo-img'\n                    id={`image-${attachment.id}`}\n                />\n                \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    container: { \n        position: 'relative', \n        width: 'calc(33% - 8px)', \n        border: '1px solid white', \n        display: 'inline-block',\n        cursor: 'pointer'\n    },\n    image: {\n        top: '0px', \n        width: '100%', \n        height: '100%',\n        position: 'absolute',\n        objectFit: 'cover'\n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nexport default class Photos extends React.Component {\n    state = {\n        collapsed: true,\n        hovered: false\n    }\n\n    renderPhotos(attachments) {\n        return attachments.map((attachment, index) => {\n            return <Thumbnail key={`person_${index}`} attachment={attachment} />\n        })\n    }\n  \n    render() {\n        const { chats, activeChat } = this.props\n\n        if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n        const chat = chats[activeChat]\n\n        return (\n            <div style={{ borderTop: '1px solid #f0f0f0' }} className='ce-photo-section'>\n                <div \n                    onMouseEnter={() => this.setState({ hovered: true })}\n                    onMouseLeave={() => this.setState({ hovered: false })}\n                    onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n                    style={this.state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                    className='ce-section-title-container ce-photo-title-container'\n                >\n                    <div \n                        className='ce-section-title ce-photo-title'\n                        style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}\n                    >\n                        Photos\n                    </div>\n\n                    {\n                        this.state.collapsed ?\n                        <LeftOutlined style={styles.collapseIcon} /> :\n                        <DownOutlined style={styles.collapseIcon} />\n                    }\n                </div>\n\n                {\n                    !this.state.collapsed &&\n                    <div className='ce-photo-feed'>\n                        <div style={{ height: '12px' }} />\n\n                        { this.renderPhotos(chat.attachments) }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}\n","import React from 'react'\n\nimport { Button, deleteChat } from 'react-chat-engine'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nexport default class Options extends React.Component {\n    state = {\n        collapsed: true,\n        hovered: false\n    }\n  \n    render() {\n        const { chats, activeChat } = this.props\n\n        if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n        const chat = chats[activeChat]\n\n        return (\n            <div style={{ borderTop: '1px solid #f0f0f0' }}>\n\n                <div \n                    onMouseEnter={() => this.setState({ hovered: true })}\n                    onMouseLeave={() => this.setState({ hovered: false })}\n                    onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n                    style={this.state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                >\n\n                    <div style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                        Options\n                    </div>\n\n                    {\n                        this.state.collapsed ?\n                        <LeftOutlined style={styles.collapseIcon} /> :\n                        <DownOutlined style={styles.collapseIcon} />\n                    }\n\n                </div>\n                \n                {\n                    !this.state.collapsed &&\n                    <div>\n\n                        <div style={{ height: '12px' }} />\n\n                        <Button \n                            value=\"Delete\" \n                            theme='danger'\n                            icon='delete'\n                            onClick={() => deleteChat(this.props, chat.id, (data) => {})}\n                            style={{ width: '100%', marginBottom: '12px' }}\n                        />\n\n                    </div>\n                }\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}\n","import React from 'react';\n\nimport { editChat, TextInput } from 'react-chat-engine'\n\nexport default class NewMessageForm extends React.Component {\n    state = {\n        activeChat: null,\n        value: ''\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n\n        editChat(\n            this.props.creds, \n            this.props.chat.id,\n            { title: this.state.value },\n            (data) => {}\n        )\n    }\n\n    // Update on new active chat. TODO: Find more eloquent way perhaps\n    componentDidUpdate() {\n        if(this.props.chat.title !== this.state.value && this.state.activeChat !== this.props.chat.id) {\n            this.setState({ \n                value: this.props.chat.title,\n                activeChat: this.props.chat.id\n            })\n        }\n    }\n  \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit.bind(this)} className='ce-chat-title-form'>\n                <TextInput \n                    label=\"Rename this Chat\" \n                    value={this.state.value} \n                    default={this.props.chat.title}\n                    handleChange={this.handleChange.bind(this)} \n                    style={{ \n                        fontSize: '16px',\n                        fontWeight: '600',\n                        textAlign: 'center',\n                        border: '0px solid white',\n                        width: '100%',\n                    }}\n                />\n            </form>\n        );\n    }\n}","import React, { Component } from 'react'\n\nimport { Avatar } from 'react-chat-engine'\n\nimport TitleForm from './TitleForm'\n\nexport default class ChatSettingsTop extends Component {\n\n    renderOnePerson(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    renderTwoPeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 44px - 22px + 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    renderThreePeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username}\n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 24px - 44px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 44px - 44px + 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[2].person.username}\n                        avatar={people[2].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    getOtherPerson(people) {\n        return people.find(person => person.person.username !== this.props.userName);\n    }\n\n    render() {\n        const { chats, activeChat } = this.props\n\n        if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n        const chat = chats[activeChat]\n        const topPeople = chat.people.slice(0, 3)\n        const otherPerson = this.getOtherPerson(chat.people)\n        \n        return (\n            <div className='ce-chat-settings-container'>\n                <div className='ce-chat-avatars-row'>\n                    { topPeople.length === 1 && this.renderOnePerson(topPeople) }\n                    \n                    { chat.is_direct_chat && otherPerson && this.renderOnePerson([otherPerson]) }\n\n                    { !chat.is_direct_chat && otherPerson && topPeople.length === 2 && this.renderTwoPeople(topPeople) }\n\n                    { !chat.is_direct_chat && otherPerson && topPeople.length === 3 && this.renderThreePeople(topPeople) }\n                </div>\n\n                {\n                    chat.is_direct_chat && otherPerson ?\n                    <div style={{ \n                        paddingTop: '55px',\n                        paddingBottom: '7px',\n                        fontSize: '16px',\n                        fontWeight: '600',\n                        textAlign: 'center',\n                        border: '0px solid white',\n                        width: '100%',\n                    }}>\n                        { otherPerson.person.username }\n                    </div> :\n                    <TitleForm chat={chat} creds={this.props} />\n                }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport PeopleSettings from './PeopleSettings'\nimport PhotosSettings from './PhotosSettings'\nimport OptionsSettings from './OptionsSettings'\nimport ChatSettingsTop from './ChatSettingsTop'\n\nexport default class ChatSettingsContainer extends Component {\n\n    render() {\n        const { chats, activeChat } = this.props\n        const chat = chats && chats[activeChat] \n        \n        if (!chat) return <div style={styles.filler} />\n        \n        return (\n            <div style={styles.settingsContainer} className='ce-settings'>\n\n                <div style={{ width: '90%', paddingLeft: '5%' }} className='ce-settings-container'>\n\n                    {\n                        this.props.renderChatSettingsTop ?\n                        this.props.renderChatSettingsTop(this.props, chat) :\n                        <ChatSettingsTop {...this.props} />\n                    }\n\n                    {\n                        this.props.renderPeopleSettings ?\n                        this.props.renderPeopleSettings(this.props, chat) :\n                        <PeopleSettings {...this.props} />\n                    }\n\n                    {\n                        this.props.renderPhotosSettings ?\n                        this.props.renderPhotosSettings(chat) :\n                        <PhotosSettings {...this.props} />\n                    }\n\n                    {\n                        this.props && chat && this.props.userName === chat.admin.username  &&\n                        <div>\n                            {\n                                this.props.renderOptionsSettings ?\n                                this.props.renderOptionsSettings(this.props, chat) :\n                                <OptionsSettings {...this.props} />\n                            }\n                        </div>\n                    }\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    settingsContainer: { \n        height: '100%',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        borderLeft: '1px solid #afafaf',\n        backgroundColor: 'white'\n    },\n    filler: { \n        display: 'flex',\n        width: '90%',\n        paddingLeft: '5%',\n        borderLeft: '1px solid #afafaf'\n    }\n}","import React, { Component } from 'react'\n\nimport { SettingOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport ChatSettings from '../../ChatSettings'\n\nexport default class ChatSettingsDrawer extends Component {\n    state = {\n        isOpen: false\n    }\n\n    render() {\n        const chatLength = Object.keys(this.props.chats) && Object.keys(this.props.chats).length\n        return (\n            <div> \n                <SettingOutlined\n                    onClick={() => this.setState({ isOpen: true })}\n                    style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \n                />\n\n                { \n                    this.state.isOpen &&\n                    <div style={styles.drawerContainer}>\n                        <CloseOutlined\n                            style={styles.closeIcon}\n                            onClick={() => this.setState({ isOpen: false })}\n                        />\n\n                        <div style={styles.titleContainer}>\n                            <div style={styles.titleText}>\n                                Chat Settings\n                            </div>\n                        </div>\n\n                        <ChatSettings {...this.props} />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    drawerContainer: { \n        position: 'fixed',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n}\n","import React, { Component } from 'react'\n\nimport { timeSinceDate } from '../../Utilities/dateToString'\n\nimport ChatListDrawer from './ChatListDrawer'\nimport ChatSettingsDrawer from './ChatSettingsDrawer'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nexport default class ChatHeader extends Component {\n    render() {\n        const { chats, activeChat } = this.props\n\n        if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n        const chat = chats[activeChat]\n        const otherPerson = chat.people.find(person => person.person.username !== this.props.userName);\n\n        return (\n            <Row \n                className='ce-chat-title'\n                style={styles.titleSection}\n            >\n                <Col \n                    xs={2} \n                    sm={0} \n                    style={{ ...styles.mobileOptiom, ...{ left: '6px' } }}\n                    className='ce-chat-list-mobile-option'\n                >\n                    <ChatListDrawer {...this.props} />\n                </Col>\n\n                <Col \n                    xs={8}\n                    sm={12}\n                    style={styles.titleContainer} \n                    className='ce-chat-title-container'\n                >\n                    <div style={styles.titleText} className='ce-chat-title-text'>\n                        { chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title }\n                    </div>\n                    \n                    <div style={styles.subtitleText} className='ce-chat-subtitle-text'>\n                        {\n                            chat.last_message.created && chat.last_message.created.length > 0 ?\n                            `Active ${timeSinceDate(chat.last_message.created)}` :\n                            'Say hello!'\n                        }\n                    </div>\n                </Col>\n\n                <Col \n                    xs={2} \n                    sm={0} \n                    style={{ ...styles.mobileOptiom, ...{ right: '6px' } }}\n                    className='ce-chat-settings-mobile-option'\n                >\n                    <ChatSettingsDrawer {...this.props} />\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst styles = {\n    titleSection: { \n        position: 'absolute',\n        top: '0px',\n        width: '100%',\n        zIndex: '1',\n        backgroundColor: 'rgb(256, 256, 256, 0.92)'\n    },\n    mobileOptiom: {\n        width: '100%',\n        top: '32px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n        overflow: 'hidden'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '18px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n    subtitleText: {\n        fontSize: '12px',\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class AuthFail extends Component {\n    render() {\n        return (\n            <div style={{ height: '100%', textAlign: 'center' }}>\n                \n                <div style={{ width: '100%' }}>\n                    <img\n                        style={{ width: '40%', paddingTop: '25vh' }}\n                        src='https://chat-engine-assets.s3.amazonaws.com/denied.svg'\n                        alt='welcome-to-chat-engine'\n                    />\n                </div>\n\n                <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                    Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at <a href='https://chatengine.io'>chatengine.io</a>\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { SyncOutlined } from '@ant-design/icons'\n\nexport default class Loading extends Component {\n    render() {\n        return (\n            <div \n                style={{ \n                    zIndex: '1',\n                    bottom: '66px', \n                    left: 'calc(50% - 78px)',\n                    position: 'absolute', \n                    fontSize: '15px',\n                    padding: '10px 22px', \n                    color: 'white',\n                    backgroundColor: '#fa8c16',\n                    borderRadius: '1.3em',\n                }}\n                id='ce-connecting-popup'\n            >\n                <SyncOutlined spin />\n                {' '}\n                Connecting\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Welcome extends Component {\n    render() {\n        return (\n            <div style={{ height: '100%', textAlign: 'center' }}>\n\n                <div style={{ width: '100%' }}>                    \n                    <img\n                        style={{ width: '60%', paddingTop: '33vh' }}\n                        src='https://chat-engine-assets.s3.amazonaws.com/welcome.svg'\n                        alt='welcome-to-chat-engine'\n                    />\n                </div>\n\n                <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                    Fill out the \"New Chat\" form to get started.\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst suffix = [\n  'st', 'nd', 'rd', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'st', 'nd', 'rd', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'st'\n]\n\nexport default class DatePartition extends Component {\n    getDate(date) {\n        return date ? date.substr(0, 10) : null\n    }\n\n    formatDate(date_time) {\n        if (!date_time) return ''\n        \n        const year = date_time.substr(0, 4)\n        const month = months[parseInt(date_time.substr(5, 2)) - 1]\n        const day = date_time.substr(8, 2)\n        const dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1]\n\n        var time = date_time.substr(11, 5)\n        var timeSuffix = ''\n\n        if(parseInt(time.substr(0, 2)) >= 12){\n            if(parseInt(time.substr(0, 2)) > 12){\n            time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2)\n            }\n            timeSuffix = 'PM'\n\n        } else {\n            timeSuffix = 'AM'\n        }\n\n        return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year\n    }\n\n    render() {\n        const { lastCreated, created } = this.props\n\n        const lastDate = this.getDate(lastCreated)\n        const thisDate = this.getDate(created)\n\n        if (lastCreated && lastDate === thisDate ) {\n            return <div />\n        }\n\n        return (\n            <div style={styles.dateText} className='ce-message-date-text'>\n                { this.formatDate(created) }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    dateText: { \n        width: '100%', \n        textAlign: 'center',\n        paddingTop: '4px',\n        paddingBottom: '10px',\n        fontSize: '15px',\n        color: 'rgba(0, 0, 0, .40)'\n    }\n}","import React, { Component } from 'react'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nexport default class Thumbnail extends Component {\n\n    render() {\n        const { attachment } = this.props\n\n        if (!attachment) {\n            return (\n                <div style={styles.loadingContainer}>\n                    <LoadingOutlined  style={{ color: 'white', padding: '4px', fontSize: '28px' }} />\n                </div>\n            )\n        }\n\n        return (\n            <img \n                style={styles.thumbnail}\n                src={attachment.file}\n                alt={'thumb-nail'}\n            />\n        )\n    }\n}\n\nconst styles = {\n    loadingContainer: {\n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline-block', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        marginRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n        backgroundColor: '#d9d9d9',\n    },\n    thumbnail: { \n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        paddingRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n    }\n}","\n\nconst colors = [\n    '#D64045',\n    '#5B3000',\n    '#00CC99',\n    '#467599',\n    '#1D3354',\n    '#8F250C',\n    '#6153CC',\n    '#961D4E',\n    '#A29F15',\n    '#0CAADC',\n    '#FF5154',\n    '#FA7921',\n    '#688E26',\n    '#550527',\n    '#A10702',\n    '#FF1053',\n    '#6C6EA0',\n    '#100B00',\n]\n\nfunction stringToNumber(str){\n    let sum = 0\n    for (var i = 0; i < str.length; i++) {\n        sum = sum + (str.charCodeAt(i) * i) - 97\n    }\n    return sum\n}\n\nexport function stringToColor(str) {\n    if (!str) {\n        return 'black'\n    } else {\n        return colors[stringToNumber(str) % colors.length]\n    }\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Dot extends Component {\n    state = { avatar: '' }\n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username } = this.props\n        const color = stringToColor(username)\n        const customStyle = this.props.style ? this.props.style : {}\n        \n        return (\n            <div\n                className='ce-avatar-dot'\n                style={{\n                    ...styles.dot,\n                    ...customStyle,\n                    ...{\n                        backgroundColor: this.state.avatar ? 'white' : color,\n                        backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundSize: '14px'\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst styles = {\n    dot: {\n        width: '13px',\n        height: '13px',\n        borderRadius: '13px',\n        textAlign: 'center',\n    }\n}","import React, { Component } from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport Dot from '../../components/Avatar/Dot'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nexport default class Message extends Component {\n    state = {\n        selected: false\n    }\n\n    renderReads() {\n        const { chat, message } = this.props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((chatPerson, index) => {\n            if (message.id === chatPerson.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={chatPerson.person.avatar}\n                        username={chatPerson.person.username}\n                        style={{ float: 'right', marginLeft: '4px' }} \n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    renderAttachments() {\n        const { message } = this.props\n        const attachments = message && message.attachments ? message.attachments : []\n        return attachments.map((attachment, index) => {\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n        })\n    }\n\n    render() {\n        const { lastMessage, message, nextMessage } = this.props\n\n        if (!message) { return <div /> }\n\n        const attachments = message && message.attachments && message.attachments\n\n        const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n        const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n        const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n        const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n        return (\n            <div \n                className='ce-message-row ce-my-message'\n                onMouseEnter={() => this.setState({ selected: true })}\n                onMouseLeave={() => this.setState({ selected: false })}\n                style={{ width: '100%', textAlign: 'right', paddingBottom }}\n            >\n                <div \n                    style={{ display: 'auto' }} \n                    className='ce-my-message-attachments-container'\n                >\n                    { this.renderAttachments() }\n                </div>\n\n                <Row\n                    style={{ paddingRight: '2px' }} \n                    className='ce-message-bubble-row ce-my-message-bubble-row'\n                >\n                    <Col xs={1} sm={2} md={3} />\n\n                    <Col xs={11} sm={10} md={9}>\n                        {\n                            !attachments || message.text && \n                            <div\n                                className='ce-message-bubble ce-my-message-bubble'\n                                style={{ ...styles.myMessage, ...{ borderRadius } }}\n                            >\n                                { message.text }\n                            </div>\n                        }\n                    </Col>\n\n                    <Col xs={1} sm={2} md={3} />\n\n                    <Col xs={12} className='ce-reads-row ce-my-reads-row'>\n                        { this.renderReads() }\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: 'rgb(24, 144, 255)', \n    }\n}","import React, { Component } from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { Avatar, Dot } from 'react-chat-engine'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\n\nexport default class TheirMessage extends Component {\n    state = {\n        selected: false\n    }\n\n    renderReads() {\n        const { chat, message } = this.props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((person, index) => {\n            if (message.id === person.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={person.person.avatar}\n                        username={person.person.username}\n                        style={{ float: 'left', marginLeft: '4px' }}\n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    renderAttachments() {\n        const { message } = this.props\n        const attachments = message && message.attachments ? this.props.message.attachments : []\n        return attachments.map((attachment, index) => {\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n        })\n    }\n\n    render() {\n        const { lastMessage, message, nextMessage } = this.props\n\n        if (!message) { return <div /> }\n\n        const attachments = message && message.attachments && message.attachments\n\n        const topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n        const bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n        const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\n        const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n        return (\n            <div \n                style={{ width: '100%', paddingBottom }}\n                className='ce-message-row ce-their-message'\n            >\n                {\n                    (!lastMessage || lastMessage.sender_username !== message.sender_username) &&\n                    <div style={styles.nameText} className='ce-their-message-sender'>\n                        { message.sender_username }\n                    </div>\n                }\n            \n                <Row style={{ paddingLeft: '2px' }} className='ce-their-message-row'>\n                    <Col xs={11} sm={10} md={9}>\n                        <div style={{ height: '0px' }} className='ce-their-message-avatar'>\n                            {\n                                (!nextMessage || nextMessage.sender_username !== message.sender_username) &&\n                                <Avatar\n                                    show_online={false}\n                                    username={message.sender_username}\n                                    avatar={message.sender && message.sender.avatar}\n                                />\n                            }\n\n                        </div>\n\n                        <div \n                            style={{ display: 'auto', paddingLeft: '50px' }}\n                            className='ce-their-message-attachments-container'\n                        >\n                            { this.renderAttachments() }\n                        </div>\n\n                        {\n                            !attachments || message.text &&\n                            <div style={{ paddingLeft: '48px' }}>\n                                <div\n                                    className='ce-message-bubble ce-their-message-bubble'\n                                    onMouseEnter={() => this.setState({ selected: true })}\n                                    onMouseLeave={() => this.setState({ selected: false })}\n                                    style={{ ...styles.theirMessage, ...{ borderRadius } }}\n                                >\n                                    { message.text }\n                                </div>\n                            </div>  \n                        }\n                    </Col>\n\n                    {/* Col is 9 to not slipp into RHS */}\n                    <Col \n                        xs={9} \n                        style={{ marginLeft: '48px' }} \n                        className='ce-reads-row ce-their-reads-row'\n                    >\n                        { this.renderReads() }\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    theirMessage: {\n        cusor: 'auto',\n        color: 'black', \n        float: 'left',\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#f1f0f0', \n    },\n    nameText: { \n        paddingLeft: '62px', \n        paddingBottom: '2px', \n        color: 'rgba(0, 0, 0, .40)', \n        fontSize: '15px' \n    }\n}","import React, { Component } from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport Dot from '../../components/Avatar/Dot'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nexport default class SendingMessage extends Component {\n    state = {\n        selected: false\n    }\n\n    renderReads() {\n        const { chat, message } = this.props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((chatPerson, index) => {\n            if (message.id === chatPerson.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={chatPerson.person.avatar}\n                        username={chatPerson.person.username}\n                        style={{ float: 'right', marginLeft: '4px' }} \n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    renderAttachments(attachments) {\n        return attachments.map((a, index) => {\n            return <Thumbnail key={`sending-file-${index}`} />\n        })\n    }\n\n    render() {\n        const { lastMessage, message, nextMessage } = this.props\n\n        if (!message) { return <div /> }\n\n        const attachments = message && message.attachments ? message.attachments : []\n\n        const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n        const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n        const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n        const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n        return (\n            <div \n                className='ce-message-row ce-my-message ce-my-message-sending'\n                onMouseEnter={() => this.setState({ selected: true })}\n                onMouseLeave={() => this.setState({ selected: false })}\n                style={{ width: '100%', textAlign: 'right', paddingBottom }}\n            >\n                <div \n                    style={{ display: 'auto' }} \n                    className='ce-my-message-attachments-container'\n                >\n                    { this.renderAttachments(attachments) }\n                </div>\n\n                <Row\n                    style={{ paddingRight: '2px' }} \n                    className='ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row'\n                >\n                    <Col xs={1} sm={2} md={3} />\n\n                    <Col xs={11} sm={10} md={9}>\n                        {\n                            message.text &&\n                            <div\n                                className='ce-message-bubble ce-my-message-bubble'\n                                style={{ ...styles.myMessage, ...{ borderRadius } }}\n                            >\n                                { message.text }\n                            </div>\n                        }\n                    </Col>\n                    \n                    <Col xs={1} sm={2} md={3} />\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#40a9ff', \n    }\n}","import React, { Component } from 'react'\n\nimport DatePartition from './DatePartition'\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\nimport SendingMessage from './SendingMessage'\n\nexport default class Message extends Component {\n    state = {\n        selected: false\n    }\n\n    render() {\n        const { lastMessage, message, sending, nextMessage } = this.props\n        const { chats, activeChat } = this.props\n\n        if (!message || !chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n        const chat = chats[activeChat]\n\n        return (\n            <div className='ce-message-and-date'>\n                {\n                    !sending &&\n                    <DatePartition \n                        lastCreated={lastMessage ? lastMessage.created : null} \n                        created={message.created} \n                    />\n                }\n\n                {\n                    sending ? \n                    <SendingMessage \n                        chat={chat} \n                        creds={this.props} \n                        lastMessage={lastMessage} \n                        message={message} \n                        nextMessage={nextMessage} \n                    /> :\n                    <div>\n                        {\n                            !sending && message.sender_username === this.props.userName ?\n                            <MyMessage \n                                chat={chat} \n                                creds={this.props} \n                                lastMessage={lastMessage} \n                                message={message} \n                                nextMessage={nextMessage} \n                            /> :\n                            <TheirMessage \n                                chat={chat} \n                                creds={this.props} \n                                lastMessage={lastMessage} \n                                message={message} \n                                nextMessage={nextMessage} \n                            />\n                        }\n                    </div>\n                }\n            </div>\n        ) \n    }\n}\n","import React from 'react'\n\nimport { CloseCircleTwoTone } from '@ant-design/icons'\n\nexport default class FileRow extends React.Component {\n    state = {\n        hovered: false\n    }\n  \n    render() {\n        return (\n            <div \n                style={{ padding: '12px 6px', display: 'inline' }}\n                onMouseEnter={() => this.setState({ hovered: true })}\n                onMouseLeave={() => this.setState({ hovered: false })}\n            >\n                \n                <img\n                    style={styles.imageSquare}\n                    alt={this.props.file ? this.props.file.name : ''}\n                    src={URL.createObjectURL(this.props.file)}\n                />\n\n                {\n                    this.state.hovered &&\n                    <CloseCircleTwoTone \n                        style={styles.closeIcon} \n                        onClick={() => this.props.onRemove && this.props.onRemove()}\n                    />\n                }\n\n            </div>\n      ) ;\n    }\n}\n\nconst styles = {\n    imageSquare: { \n        height: '108px', \n        width: '108px', \n        border: '1px solid #afafaf',\n        borderRadius: '8px',\n        objectFit: 'cover',\n        display: 'inline',\n    },\n    closeIcon: {\n        position: 'relative', \n        bottom: '91px', \n        right: '20px', \n        width: '0px', \n        cursor: 'pointer'\n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nexport default class FileRow extends React.Component {\n    renderFiles() {\n        return this.props.files.map((file, index) => {\n            return (\n                <Thumbnail \n                    file={file} \n                    key={`thumb_${index}`} \n                    onRemove={() => this.props.onRemove && this.props.onRemove(index)}\n                />\n            )\n        })\n    }\n  \n    render() {\n        return (\n            <div style={{ width: 'calc(100% - 24px)', paddingLeft: '12px' }}>\n                { this.renderFiles() }\n            </div>\n      ) ;\n    }\n}","import React from 'react';\n\nimport { PaperClipOutlined } from '@ant-design/icons'\n\nexport default class ImagesInput extends React.Component {\n    state = {\n        hovered: false,\n        files: []\n    }\n\n    onSelect(event) {\n        let files = []\n        const indexes = [...Array(event.target.files.length).keys()]\n\n        indexes.map((i, index) => {\n            const file = event.target.files[index]\n            if (file) { files.push(file) }\n        })\n        \n        this.props.onSelectFiles &&  this.props.onSelectFiles(files)\n    }\n\n    render() {\n        return (\n            <form\n                className=\"uploader\"\n                encType=\"multipart/form-data\"\n                style={{ height: '0px' }}\n            >\n\n                <label\n                    htmlFor=\"files\"\n                    id='upload-document-button'\n                >\n\n                    <PaperClipOutlined \n                        onMouseEnter={() => this.setState({ hovered: true })}\n                        onMouseLeave={() => this.setState({ hovered: false })}\n                        style={{\n                            ...{ cursor: 'pointer', position: 'absolute', bottom: '20px', right: '63px', fontSize: '18px' },\n                            ...{ color: this.state.hovered ? '#69c0ff' : '#1890ff' }\n                        }}\n                    />\n\n                </label>\n\n                <input\n                    multiple\n                    id=\"files\"\n                    accept=\"image/x-png,image/gif,image/jpeg\"\n                    style={{ visibility: \"hidden\" }}\n                    type=\"file\"\n                    onChange={(e) => this.onSelect(e)} \n                />\n\n            </form>\n        );\n    }\n}\n","import React from 'react';\n\nimport { sendMessage, isTyping } from 'react-chat-engine'\n\nimport FileRow from './FileRow'\nimport ImagesInput from './ImagesInput'\n\nimport { Button, TextAreaInput } from 'react-chat-engine'\nexport default class NewMessageForm extends React.Component {\n    state = {\n      trigger: 0,\n      mod: 3,\n      value: '',\n      attachments: []\n    }\n\n    onRemove(index) {\n      let { attachments } = this.state \n      attachments.splice(index, 1)\n      this.setState({ attachments })\n    }\n  \n    handleChange(event) {\n      this.setState({\n        value: event.target.value,\n        trigger: (this.state.trigger + 1) % this.state.mod\n      });\n      \n      if (this.state.trigger === 1) {\n        isTyping(this.props, this.props.activeChat)\n      }\n    }\n  \n    handleSubmit(event) {\n      event.preventDefault();\n      const { attachments } = this.state\n      const text = this.state.value.trim()\n      const custom_json = { sender_id: Date.now().toString() }\n      const sender_username = this.props.userName\n      const data = { text, attachments, custom_json, sender_username, chat: this.props.activeChat }\n\n      if (text.length > 0 || attachments.length > 0) {\n        sendMessage(\n          this.props, \n          this.props.activeChat, \n          data,\n          (data) => {}\n        )\n      }\n\n      this.props.sendingMessage && this.props.sendingMessage(data)\n\n      this.setState({ value: '', attachments: [] })\n    }\n  \n    render() {\n      return (\n        <div \n          id='msg-form-container'\n          style={styles.NewMessageFormContainer}\n          className='ce-message-form-container'\n        >\n          <FileRow files={this.state.attachments} onRemove={(i) => this.onRemove(i)} />\n\n          <ImagesInput onSelectFiles={(attachments) => this.setState({ attachments })} />\n\n          <form onSubmit={this.handleSubmit.bind(this)} className='ce-message-form'>\n            <div style={styles.inputContainer} className='ce-message-input-form'>\n              <TextAreaInput\n                value={this.state.value}\n                label='Send a message...'\n                handleChange={this.handleChange.bind(this)}\n                onSubmit={this.handleSubmit.bind(this)}\n              />\n\n              <Button \n                icon='send'\n                type=\"submit\"\n                style={{ position: 'absolute', bottom: '10px', right: '6px' }}\n              />\n            </div>\n          </form>\n        </div>\n      );\n    }\n}\n\nconst styles = {\n  NewMessageFormContainer: { \n    position: 'absolute', \n    bottom: '0px', \n    width: '100%', \n    backgroundColor: 'white',\n  },\n  inputContainer: { \n    minHeight: '36px',\n    paddingTop: '10px',\n    paddingBottom: '6px',\n  },\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../Utilities/colorMapping'\n\nexport default class ChatFeed extends Component {\n    render() {\n        return (\n            <div style={{ color: stringToColor(this.props.username), padding: '2px', paddingLeft: '12px' }}>\n                {`${this.props.username} is typing...`}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport ChatHeader from './ChatHeader'\nimport { AuthFail, Loading, Welcome } from './Steps'\n\nimport MessageBubble from './MessageBubble'\nimport NewMessageForm from './NewMessageForm'\nimport IsTyping from './IsTyping'\n\nimport _ from 'lodash'\n\nimport { animateScroll } from \"react-scroll\"\n\nexport default class ChatFeed extends Component {\n    state = {\n        duration: 0\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ duration: 100 })\n        }, 3000); // Once the chat loads, start animating\n    }\n\n    renderTypers() {\n        const { typingData, activeChat } = this.props\n        const typers = typingData && typingData[activeChat] ? typingData[activeChat] : []\n\n        if (this.props.renderIsTyping) {\n            return this.props.renderIsTyping(typers)\n        }\n\n        return typers.map((username, index) => <IsTyping key={`typer_${index}`} username={username} />)\n    }\n\n    renderMessages() {\n        const { messages, chats, activeChat } = this.props\n        const chat = chats && chats[activeChat]\n        const keys = Object.keys(messages)\n\n        return keys.map((key, index) => {\n            const message = messages[key]\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n            if (this.props.renderMessageBubble) {\n                return (\n                    <div key={`message_${index}`}>\n                        { \n                            this.props.renderMessageBubble(\n                                this.props, \n                                chat, \n                                messages[lastMessageKey], \n                                message, \n                                messages[nextMessageKey]\n                            ) \n                        }\n                    </div>\n                )\n            }\n            \n            return (\n                <MessageBubble \n                    key={`message_${index}`}\n                    {...this.props}\n                    chat={chat}\n                    message={message}\n                    lastMessage={messages[lastMessageKey]}\n                    nextMessage={messages[nextMessageKey]}\n                />\n            )\n        })\n    }\n\n    renderSendingMessages() {\n        const { sendingMessages, chats, activeChat } = this.props\n        const keys = Object.keys(sendingMessages)\n        const chat = chats && chats[activeChat]\n\n        return keys.map((key, index) => {\n            const message = sendingMessages[key]\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n            if(message && message.chat === this.props.activeChat) {\n                return (\n                    <MessageBubble \n                        sending\n                        key={`sending-msg-${index}`}\n                        {...this.props}\n                        chat={chat}\n                        message={message}\n                        lastMessage={sendingMessages[lastMessageKey]}\n                        nextMessage={sendingMessages[nextMessageKey]}\n                    />\n                )\n            }\n        })\n    }\n\n    scrollToBottom() {\n        animateScroll.scrollToBottom({\n            duration: this.state.duration,\n            containerId: \"ce-feed-container\"\n        })\n    }\n\n    componentDidUpdate() {\n        // Only scroll if messages loaded\n        // TODO: Make more sophisticated\n        if(!_.isEmpty(this.props.messages)) {\n            this.scrollToBottom()\n        }\n    }\n\n    render() {\n        const { chats, creds, activeChat } = this.props\n        const chat = chats && chats[activeChat] \n\n        if(creds === undefined) {\n            return <AuthFail />\n        }\n\n        if(creds && chats !== null && _.isEmpty(chats)) {\n            return <Welcome />\n        }\n\n        return (\n            <div \n                className='ce-chat-feed'\n                style={{ display: 'flex', maxHeight: '100vh', backgroundColor: '#f0f0f0' }}\n            >\n                {\n                    this.props.connecting &&\n                    <Loading />\n                }\n\n                {\n                    this.props.renderChatHeader ? \n                    this.props.renderChatHeader(chat) :\n                    <ChatHeader {...this.props} />\n                }\n\n\n                <div\n                    id='ce-feed-container'\n                    style={styles.feedContainer} \n                    className='ce-chat-feed-container'\n                >\n                    <div style={{ height: '88px' }} className='ce-feed-container-top' />\n\n                    { this.renderMessages() }\n\n                    { this.renderSendingMessages() }\n\n                    { this.renderTypers() }\n\n                    <div style={{ height: '54px' }} className='ce-feed-container-bottom' />\n                </div>\n\n                {\n                    this.props.renderNewMessageForm ?\n                    this.props.renderNewMessageForm(this.props, activeChat) :\n                    <NewMessageForm {...this.props} />\n                }\n            </div>\n        )\n    }\n}\nconst styles = {\n    feedContainer: { \n        position: 'absolute', \n        top: '0px', \n        height: '100%', \n        width: '100%', \n        overflow: 'scroll',\n        overflowX: 'hidden',\n        backgroundColor: 'white',\n        borderRight: '1px solid rgb(175, 175, 175)'\n    }\n}","import React, { Component } from 'react'\n\nimport _ from 'lodash'\n\nimport { getChats } from '../../actions/chats'\nimport { getMessages, readMessage } from '../../actions/messages'\n\nimport Socket from '../Socket'\n\nimport ChatList from './ChatList'\nimport ChatFeed from './ChatFeed'\nimport ChatSettings from './ChatSettings'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nexport default class App extends Component {\n  state = {\n    connecting: true,\n    creds: null,\n    chats: null,\n    messages: {},\n    sendingMessages: {},\n    activeChat: null,\n    typingCounter: {},\n    typingData: {},\n    onChatClick: (chatId) => this.setActiveChat(chatId),\n    sendingMessage: (chatId) => this.sendingMessage(chatId),\n  }\n\n  sortChats(chats) {\n    return Object.values(chats).sort((a, b) => { \n      const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\n      const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\n      return new Date(bDate) - new Date(aDate); \n    })\n  }\n\n  onConnect(creds) {\n    this.setState({ creds, connecting: false })\n    getChats(creds, () => {})\n\n    this.props.onConnect && this.props.onConnect(creds)\n  }\n\n  onFailAuth(creds) {\n    this.setState({ creds: undefined })\n\n    this.props.onFailAuth && this.props.onFailAuth(creds)\n  }\n\n  setActiveChat(chatId) {\n    this.setState({ activeChat: chatId })\n    getMessages(this.state.creds, chatId, () => {})\n  }\n\n  onGetChats(chats) {\n    chats = this.sortChats(chats)\n\n    if (chats.length > 0 && this.state.activeChat === null) {\n      this.setActiveChat(chats[0].id) \n    }\n    this.setState({ chats: _.mapKeys(chats, 'id') })\n\n    this.props.onGetChats && this.props.onGetChats(chats)\n  }\n\n  onNewChat(chat) {\n    const { chats } = this.state\n\n    if (chats) {\n      chats[chat.id] = chat\n      this.setState({ chats })\n      this.setActiveChat(chat.id)\n    }\n\n    this.props.onNewChat && this.props.onNewChat(chat)\n  }\n\n  onEditChat(chat) {\n    const { chats } = this.state\n    \n    if (chats) {\n      chats[chat.id] = chat\n      this.setState({ chats })\n    }\n\n    this.props.onEditChat && this.props.onEditChat(chat)\n  }\n\n  onDeleteChat(chat) {\n    const { chats } = this.state\n    \n\n    if (chats) {\n      chats[chat.id] = undefined\n      this.setState({ chats })\n      if (!_.isEmpty(chats)) {\n        const sortedChats = this.sortChats(chats)\n        this.setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0)\n      }\n    }\n\n    this.props.onDeleteChat && this.props.onDeleteChat(chat)\n  }\n\n  onGetMessages(chatId, messages) {\n    this.setState({ messages: _.mapKeys(messages, 'id') })\n\n    if (messages.length > 0) {\n      const messageId = messages[messages.length - 1].id\n      readMessage(this.state.creds, this.state.activeChat, messageId, () => {})\n    }\n    \n    this.props.onGetMessages && this.props.onGetMessages(chatId, messages)\n  }\n\n  sendingMessage(message) {\n    this.setState({\n      sendingMessages: {\n        ...this.state.sendingMessages,\n        [message.custom_json.sender_id]: message\n      }\n    })\n  }\n\n  onNewMessage(chatId, message) {\n    const { sendingMessages, messages } = this.state\n\n    if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n      sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\n      this.setState({ sendingMessages })\n    }\n\n    if (chatId === this.state.activeChat) {\n      messages[message.id] = message\n      this.setState({ messages })\n    }\n\n    readMessage(this.state.creds, this.state.activeChat, message.id)\n\n    this.props.onNewMessage && this.props.onNewMessage(chatId, message)\n  }\n\n  onEditMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      const { messages } = this.state\n      messages[message.id] = message\n      this.setState({ messages })\n    }\n\n    this.props.onEditMessage && this.props.onEditMessage(chatId, message)\n  }\n\n  onDeleteMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      const { messages } = this.state\n      messages[message.id] = undefined\n      this.setState({ messages })\n    }\n\n    this.props.onDeleteMessage && this.props.onDeleteMessage(chatId, message)\n  }\n\n  onTyping(chatId, person) {\n    if (this.state.typingCounter[chatId] && this.state.typingCounter[chatId][person]) {\n      this.setState({\n        ...this.state,\n        typingCounter: {\n          ...this.state.typingCounter,\n          [chatId]: {\n            ...this.state.typingCounter[chatId],\n            [person]: this.state.typingCounter[chatId][person] + 1\n          }\n        }\n      })\n\n    } else {\n      this.setState({\n        ...this.state,\n        typingCounter: {\n          ...this.state.typingCounter,\n          [chatId]: {\n            ...this.state.typingCounter[chatId],\n            [person]: 1\n          }\n        }\n      })\n    }\n\n    this.props.onTyping && this.props.onTyping(chatId, person)\n\n    setTimeout(() => {\n      this.setState({\n        ...this.state,\n        typingCounter: {\n          ...this.state.typingCounter,\n          [chatId]: {\n            ...this.state.typingCounter[chatId],\n            [person]: this.state.typingCounter[chatId][person] - 1\n          }\n        }\n      })\n    }, 2500);\n  }\n\n  componentDidMount() { getChats(this.props) }\n\n  componentDidUpdate() {\n    const { typingCounter, typingData } = this.state\n\n    Object.keys(typingCounter).map((chat) => {\n      let typers = []\n\n      Object.keys(typingCounter[chat]).map((person) => {\n        if (typingCounter[chat][person] > 0) {\n          typers.push(person)\n        }\n      })\n\n      if (!typingData[chat] || typingData[chat].length !== typers.length) {\n        this.setState({ ...this.state, typingData: { ...this.state.typingData, [chat]: typers } })\n      }\n    })\n  }\n\n  componentDidMount() { getChats(this.props, (chats) => this.onGetChats(chats)) }\n\n  render() {\n    const { height } = this.props\n\n    return (\n      <div style={{ textAlign: 'left', backgroundColor: 'white' }}>\n        <Socket\n          {...this.props}\n          // API Hooks\n          onConnect={(props) => this.onConnect(props)}\n          onDisconnect={() => this.setState({ connecting: true })}\n          onFailAuth={(props) => this.onFailAuth(props)}\n          onGetChats={(chats) => this.onGetChats(chats)}\n          onNewChat={(chat) => this.onNewChat(chat)}\n          onEditChat={(chat) => this.onEditChat(chat)}\n          onDeleteChat={(chat) => this.onDeleteChat(chat)}\n          onAddPerson={(chat) => this.onEditChat(chat)}\n          onRemovePerson={(chat) => this.onEditChat(chat)}\n          onTyping={(chatId, person) => this.onTyping(chatId, person)}\n          onGetMessages={(chatId, messages) => this.onGetMessages(chatId, messages)}\n          onNewMessage={(chatId, message) => this.onNewMessage(chatId, message)}\n          onEditMessage={(chatId, message) => this.onEditMessage(chatId, message)}\n          onDeleteMessage={(chatId, message) => this.onDeleteMessage(chatId, message)}\n        />\n\n        <Row>\n          <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\n            {\n              this.props.renderChatList ?\n              this.props.renderChatList({...this.props, ...this.state}) :\n              <ChatList {...this.props} {...this.state} />\n            }\n          </Col>\n\n          <Col xs={12} sm={6} style={{ height: height ? height : '' }}>\n            {\n              this.props.renderChatFeed ?\n              this.props.renderChatFeed({...this.props, ...this.state}) :\n              <ChatFeed {...this.props} {...this.state} />\n            }\n          </Col>\n\n          <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\n            {\n              this.props.renderChatSettings ?\n              this.props.renderChatSettings({...this.props, ...this.state}) :\n              <ChatSettings {...this.props} {...this.state} />\n            }\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport Socket from './Socket'\nimport ChatUi from './ChatUi'\n\nconst SocketConnector = (props) => {\n    if (props.hideUI) {\n        return <Socket {...props} />\n    } else {\n        return <ChatUi {...props} />\n    }\n    \n}\n\nexport default SocketConnector\n","import axios from 'axios'\nimport * as str from '..'\n\nexport function isTyping(props, chatId, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/typing/`,\n        {},\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {});\n}","import axios from 'axios'\nimport * as str from '..'\n\nexport function addPerson(props, chatId, userName, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\n\nexport function removePerson(props, chatId, userName, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function getOtherPeople(props, chatId, successCallback, errorCallback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/others/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data)\n\n        successCallback && successCallback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Other People Error', error)\n\n        errorCallback && errorCallback()\n    });\n}","import axios from 'axios'\nimport * as str from '..'\n\nexport function getMyData(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/me/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Myself Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\n\nexport function editMyData(props, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/me/`,\n        data,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Myself Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\n\nexport function leaveChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { headers: { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Avatar extends Component {\n    state = { avatar: '' }  \n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username, is_online } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const text = username ? username.substring(0, 2).toUpperCase() : ''\n        const color = stringToColor(username)    \n                \n        return (\n            <div style={{ width: '48px', height: '48px' }}>\n                <div style={{ height: '0px' }}>\n                    <div \n                        className='ce-avatar'\n                        style={{ \n                            ...styles.avatar, \n                            ...customStyle, \n                            ...{ \n                                backgroundColor: this.state.avatar ? 'white' : color,\n                                backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                                backgroundRepeat: 'no-repeat',\n                                backgroundPosition: 'center',\n                                backgroundSize: '48px',\n                            }\n                        }}\n                    >   \n                        <div \n                            className='ce-avatar-text'\n                            style={styles.avatarText}\n                        >\n                            { !this.state.avatar && text }\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    this.props.show_online !== false && \n                    <div\n                        className='ce-avatar-status'\n                        style={{\n                            ...styles.status, \n                            ...{ backgroundColor: is_online ? '#52c41a' : '#f5222d' }\n                        }}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    avatar: {\n        width: '44px',\n        height: '44px',\n        borderRadius: '22px',\n        color: 'white',\n        textAlign: 'center',\n    },\n    avatarText: {\n        color: 'white', \n        paddingTop: '12px', \n        fontSize: '15px', \n        fontWeight: '600'\n    },\n    status: { \n        width: '8px', \n        height: '8px', \n        borderRadius: '100%', \n        border: '2px solid white',   \n    }\n}","import React, { Component } from 'react'\n\nimport { PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\n\nexport default class Button extends Component {\n    state = {\n        hovered: false\n    }\n\n    render() {\n        const { value, icon, theme, style } = this.props\n\n        const customStyle = style ? style : {}\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\n        const themeStyle = theme === 'danger' ? styles.dangerButton : styles.button\n\n        return (\n            <button \n                type={this.props.type}\n                onClick={() => this.props.onClick && this.props.onClick()}\n                onMouseEnter={() => this.setState({ hovered: true })}\n                onMouseLeave={() => this.setState({ hovered: false })}\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\n                className={`ce-primary-button ${theme === 'danger' ? 'ce-danger-button' : ''}`}\n            >\n\n                { icon === 'plus' && <PlusOutlined /> }\n                { icon === 'send'  && <ArrowUpOutlined /> }\n                { icon === 'delete'  && <DeleteOutlined /> }\n                { icon === 'user-add'  && <UserAddOutlined /> }\n\n                { value && icon ? ` ${value}` : value}  \n\n            </button>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        color: 'white',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: '#1890ff'\n    },\n    dangerButton: {\n        color: 'red',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: 'white',\n        border: '1px solid red',\n    },\n    hoverButton: {\n        opacity: '0.66'\n    }\n}","import React, { Component } from 'react'\n\nexport default class TextInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n        if(value) {\n            const event = {target: {value}}\n            this.props.handleChange(event)\n            this.setState({ value })\n        }\n    }\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\n\n        return (\n            // NOTE: You may need to make a div the searchContainer to put icons in...\n            <input \n                className='ce-input ce-text-input'\n                value={this.props.value} \n                placeholder={this.props.label}\n                style={{ ...defaultStyle, ...customStyle }}\n                onBlur={() => this.setState({ focused: false })}\n                onFocus={() => this.setState({ focused: true })}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \n            />\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #d9d9d9',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    },\n    focusInput: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #1890ff',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    }\n}","import React, { Component } from 'react'\n\nexport default class TextAreaInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n\n        if(value) {\n            this.props.handleChange({ target: { value } })\n            this.setState({ value })\n        }\n    }\n\n    resize() {\n        var textarea = document.getElementById(\"msg-textarea\");\n        textarea.style.height = \"\";\n        textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n    }\n\n    componentDidMount() {\n        this.resize()\n    }\n\n    handleChange(e) {\n        this.resize()\n        this.props.handleChange && this.props.handleChange(e)\n    }\n\n    onKeyDown(e) {\n        if (e.key === 'Enter') { \n            e.preventDefault()\n\n            if (this.props.value.length > 0) {\n                this.props.onSubmit && this.props.onSubmit(e) \n            }\n        }\n    }\n\n    render() {\n        return (\n            <textarea \n                id='msg-textarea'\n                className='ce-input ce-textarea-input'\n                rows='1'\n                style={ styles.input }\n                value={ this.props.value }\n                placeholder={ this.props.label }\n                onBlur={() => this.setState({ focused: false })}\n                onFocus={() => this.setState({ focused: true })}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.handleChange(e)} \n                onKeyDown={(e) => this.onKeyDown(e)}\n            />\n        )\n    }\n}\n// This is another thing we need to chat about which regards the competence of one more\nconst styles = {\n    input: { \n        // Border\n        border: '1px solid white',\n        width: 'calc(100% - 64px - 24px - 44px)',\n        outline: 'none', \n        // Fonts\n        fontFamily: 'inherit',\n        fontSize: '15px',\n        // Padding\n        paddingLeft: '12px',\n        paddingRight: '12px',\n        // Position\n        position: 'relative', \n        left: '12px',\n        // Dynamic Sizing\n        resize: 'none', \n    }\n}","import React, { Component } from 'react'\n\nimport { CloseOutlined } from '@ant-design/icons'\n\nexport default class AutoComplete extends Component {\n    state = {\n        focused: false,\n        showAll: false,\n    }\n\n    onFocus() {\n        this.onChange('', true)\n        this.setState({ focused: true })\n        this.props.onFocus && this.props.onFocus()\n    }\n\n    onBlur() {\n        this.setState({ focused: false })\n        this.props.onBlur && this.props.onBlur()\n    }\n\n    onChange(value, showAll) {\n        this.setState({ showAll })\n        this.props.handleChange && this.props.handleChange(value)\n    }\n\n    getNames() {\n        let count = 0\n        const max = this.props.max ? this.props.max : 3\n        \n        const results = []\n\n        this.props.options.map(option => {\n            if (JSON.stringify(option).toLowerCase().indexOf(this.props.value.toLowerCase()) !== -1 && count < max) {\n                count = count + 1\n                results.push(option)\n            }\n        })\n        \n        return results\n    }\n\n\n    renderOptions() {\n        if(!this.props.value && !this.state.showAll) { return <div /> }\n\n        const results = this.getNames()\n\n        return results.map((option, index) => {\n            return (\n                <div key={`option_${index}`} className='ce-autocomplete-option'>\n                    { this.props.renderOption && this.props.renderOption(option) }\n\n                    { \n                        index === results.length - 1 && \n                        <div \n                            style={styles.close} \n                            className='ce-autocomplete-close'\n                            onClick={() => this.onChange('', false)}\n                        >\n                            <CloseOutlined />\n                        </div>\n                    }\n                </div>\n            )\n        })\n    }\n\n    render() {\n        const { options } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = { ...styles.input, ...{ border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9' } }\n\n        return (\n            <div>\n                <input \n                    className='ce-input ce-autocomplete-input'\n                    value={this.props.value} \n                    placeholder={this.props.label}\n                    style={{ ...defaultStyle, ...customStyle }}\n                    type={this.props.type ? this.props.type : \"text\" }\n                    onBlur={() => this.onBlur()}\n                    onFocus={() => this.onFocus()}\n                    onChange={(e) => this.onChange(e.target.value, true)}\n                />\n\n                {\n                    options && options.length > 0 && this.state.showAll &&\n                    <div \n                        className='ce-autocomplete-options'\n                        style={{ borderRadius: '19px', border: '1px solid #afafaf', overflow: 'hidden' }}\n                    >\n                        { this.props.options && this.renderOptions() }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        height: '36px',\n        fontSize: '15px',\n        outline: 'none',\n        borderRadius: '24px',\n        padding: '0px 12px',\n        boxSizing: 'border-box'\n    },\n    close: {\n        cursor: 'pointer',\n        textAlign: 'center',\n        padding: '8px 12px',\n        fontSize: '15px',\n        borderRadius: '24px',\n    }\n}","import React from 'react'\n\nimport SocketConnector from './components'\n\nimport { isTyping } from './actions/typing'\nimport { getChats, newChat, editChat, deleteChat } from './actions/chats'\nimport { addPerson, removePerson, getOtherPeople, getMyData, editMyData, leaveChat } from './actions/people'\nimport { getMessages, sendMessage, editMessage, deleteMessage } from './actions/messages'\n\nimport { Avatar, Dot } from './components/ChatUi/components/Avatar'\nimport { Button } from './components/ChatUi/components/Button'\nimport { TextInput, TextAreaInput, AutoCompleteInput } from './components/ChatUi/components/Input'\n\nimport ChatList from './components/ChatUi/ChatList'\nimport ChatCard from './components/ChatUi/ChatList/ChatCard'\nimport NewChatForm from './components/ChatUi/ChatList/NewChatForm'\n\nimport ChatFeed from './components/ChatUi/ChatFeed'\nimport ChatHeader from './components/ChatUi/ChatFeed/ChatHeader'\nimport MessageBubble from './components/ChatUi/ChatFeed/MessageBubble'\nimport IsTyping from './components/ChatUi/ChatFeed/IsTyping'\nimport NewMessageForm from './components/ChatUi/ChatFeed/NewMessageForm'\n\nimport ChatSettings from './components/ChatUi/ChatSettings'\nimport ChatSettingsTop from './components/ChatUi/ChatSettings/ChatSettingsTop'\nimport PeopleSettings from './components/ChatUi/ChatSettings/PeopleSettings'\nimport PhotosSettings from './components/ChatUi/ChatSettings/PhotosSettings'\nimport OptionsSettings from './components/ChatUi/ChatSettings/OptionsSettings'\n\nconst ChatEngine = (props) => {\n  return <SocketConnector {...props} />\n}\n\nexport {\n  ChatEngine,\n\n  Avatar, Dot,\n  Button,\n  TextInput, TextAreaInput, AutoCompleteInput,\n  \n  ChatList, ChatCard, NewChatForm,\n  ChatFeed, ChatHeader, MessageBubble, IsTyping, NewMessageForm,\n  ChatSettings, ChatSettingsTop, PeopleSettings, PhotosSettings, OptionsSettings,\n  \n  getChats,\n  newChat,\n  editChat,\n  deleteChat,\n\n  addPerson,\n  removePerson,\n  getOtherPeople,\n  getMyData,\n  editMyData,\n  leaveChat,\n\n  getMessages,\n  sendMessage,\n  editMessage,\n  deleteMessage,\n\n  isTyping,\n}"]},"metadata":{},"sourceType":"module"}