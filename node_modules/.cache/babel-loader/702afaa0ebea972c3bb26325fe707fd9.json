{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (typeof value !== \"function\") {\n    throw new TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(mutations, observer) {\n    if (new.target !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n    mutations = utils.tryWrapperForImpl(mutations);\n    observer = utils.tryWrapperForImpl(observer);\n    callResult = Reflect.apply(value, thisArg, [mutations, observer]);\n  }\n\n  invokeTheCallbackFunction.construct = (mutations, observer) => {\n    mutations = utils.tryWrapperForImpl(mutations);\n    observer = utils.tryWrapperForImpl(observer);\n    let callResult = Reflect.construct(value, [mutations, observer]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"sources":["/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/node_modules/jsdom/lib/jsdom/living/generated/MutationCallback.js"],"names":["conversions","require","utils","exports","convert","value","context","TypeError","invokeTheCallbackFunction","mutations","observer","new","target","undefined","Error","thisArg","tryWrapperForImpl","callResult","Reflect","apply","construct","wrapperSymbol","objectReference"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEAE,OAAO,CAACC,OAAR,GAAkB,CAACC,KAAD,EAAQ;AAAEC,EAAAA,OAAO,GAAG;AAAZ,IAAqC,EAA7C,KAAoD;AACpE,MAAI,OAAOD,KAAP,KAAiB,UAArB,EAAiC;AAC/B,UAAM,IAAIE,SAAJ,CAAcD,OAAO,GAAG,oBAAxB,CAAN;AACD;;AAED,WAASE,yBAAT,CAAmCC,SAAnC,EAA8CC,QAA9C,EAAwD;AACtD,QAAIC,GAAG,CAACC,MAAJ,KAAeC,SAAnB,EAA8B;AAC5B,YAAM,IAAIC,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,UAAMC,OAAO,GAAGb,KAAK,CAACc,iBAAN,CAAwB,IAAxB,CAAhB;AACA,QAAIC,UAAJ;AAEAR,IAAAA,SAAS,GAAGP,KAAK,CAACc,iBAAN,CAAwBP,SAAxB,CAAZ;AAEAC,IAAAA,QAAQ,GAAGR,KAAK,CAACc,iBAAN,CAAwBN,QAAxB,CAAX;AAEAO,IAAAA,UAAU,GAAGC,OAAO,CAACC,KAAR,CAAcd,KAAd,EAAqBU,OAArB,EAA8B,CAACN,SAAD,EAAYC,QAAZ,CAA9B,CAAb;AACD;;AAEDF,EAAAA,yBAAyB,CAACY,SAA1B,GAAsC,CAACX,SAAD,EAAYC,QAAZ,KAAyB;AAC7DD,IAAAA,SAAS,GAAGP,KAAK,CAACc,iBAAN,CAAwBP,SAAxB,CAAZ;AAEAC,IAAAA,QAAQ,GAAGR,KAAK,CAACc,iBAAN,CAAwBN,QAAxB,CAAX;AAEA,QAAIO,UAAU,GAAGC,OAAO,CAACE,SAAR,CAAkBf,KAAlB,EAAyB,CAACI,SAAD,EAAYC,QAAZ,CAAzB,CAAjB;AACD,GAND;;AAQAF,EAAAA,yBAAyB,CAACN,KAAK,CAACmB,aAAP,CAAzB,GAAiDhB,KAAjD;AACAG,EAAAA,yBAAyB,CAACc,eAA1B,GAA4CjB,KAA5C;AAEA,SAAOG,yBAAP;AACD,CAhCD","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(mutations, observer) {\n    if (new.target !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    mutations = utils.tryWrapperForImpl(mutations);\n\n    observer = utils.tryWrapperForImpl(observer);\n\n    callResult = Reflect.apply(value, thisArg, [mutations, observer]);\n  }\n\n  invokeTheCallbackFunction.construct = (mutations, observer) => {\n    mutations = utils.tryWrapperForImpl(mutations);\n\n    observer = utils.tryWrapperForImpl(observer);\n\n    let callResult = Reflect.construct(value, [mutations, observer]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n"]},"metadata":{},"sourceType":"script"}