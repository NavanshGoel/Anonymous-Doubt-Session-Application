{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n\nconst pubsuffix = require(\"./pubsuffix-psl\"); // Gives the permutation of all possible domainMatch()es of a given domain. The\n// array is in shortest-to-longest order.  Handy for indexing.\n\n\nconst SPECIAL_USE_DOMAINS = [\"local\"]; // RFC 6761\n\nfunction permuteDomain(domain, allowSpecialUseDomain) {\n  let pubSuf = null;\n\n  if (allowSpecialUseDomain) {\n    const domainParts = domain.split(\".\");\n\n    if (SPECIAL_USE_DOMAINS.includes(domainParts[domainParts.length - 1])) {\n      pubSuf = `${domainParts[domainParts.length - 2]}.${domainParts[domainParts.length - 1]}`;\n    } else {\n      pubSuf = pubsuffix.getPublicSuffix(domain);\n    }\n  } else {\n    pubSuf = pubsuffix.getPublicSuffix(domain);\n  }\n\n  if (!pubSuf) {\n    return null;\n  }\n\n  if (pubSuf == domain) {\n    return [domain];\n  }\n\n  const prefix = domain.slice(0, -(pubSuf.length + 1)); // \".example.com\"\n\n  const parts = prefix.split(\".\").reverse();\n  let cur = pubSuf;\n  const permutations = [cur];\n\n  while (parts.length) {\n    cur = `${parts.shift()}.${cur}`;\n    permutations.push(cur);\n  }\n\n  return permutations;\n}\n\nexports.permuteDomain = permuteDomain;","map":{"version":3,"sources":["/Users/kanavmittal/Downloads/Anonymous-Doubt-Session-Application-Ashank-App/node_modules/tough-cookie/lib/permuteDomain.js"],"names":["pubsuffix","require","SPECIAL_USE_DOMAINS","permuteDomain","domain","allowSpecialUseDomain","pubSuf","domainParts","split","includes","length","getPublicSuffix","prefix","slice","parts","reverse","cur","permutations","shift","push","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB,C,CAEA;AACA;;;AACA,MAAMC,mBAAmB,GAAG,CAAC,OAAD,CAA5B,C,CAAuC;;AACvC,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,qBAA/B,EAAsD;AACpD,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAID,qBAAJ,EAA2B;AACzB,UAAME,WAAW,GAAGH,MAAM,CAACI,KAAP,CAAa,GAAb,CAApB;;AACA,QAAIN,mBAAmB,CAACO,QAApB,CAA6BF,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAqB,CAAtB,CAAxC,CAAJ,EAAuE;AACrEJ,MAAAA,MAAM,GAAI,GAAEC,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAqB,CAAtB,CAAyB,IAC9CH,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAqB,CAAtB,CACZ,EAFD;AAGD,KAJD,MAIO;AACLJ,MAAAA,MAAM,GAAGN,SAAS,CAACW,eAAV,CAA0BP,MAA1B,CAAT;AACD;AACF,GATD,MASO;AACLE,IAAAA,MAAM,GAAGN,SAAS,CAACW,eAAV,CAA0BP,MAA1B,CAAT;AACD;;AAED,MAAI,CAACE,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AACD,MAAIA,MAAM,IAAIF,MAAd,EAAsB;AACpB,WAAO,CAACA,MAAD,CAAP;AACD;;AAED,QAAMQ,MAAM,GAAGR,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgB,EAAEP,MAAM,CAACI,MAAP,GAAgB,CAAlB,CAAhB,CAAf,CAtBoD,CAsBE;;AACtD,QAAMI,KAAK,GAAGF,MAAM,CAACJ,KAAP,CAAa,GAAb,EAAkBO,OAAlB,EAAd;AACA,MAAIC,GAAG,GAAGV,MAAV;AACA,QAAMW,YAAY,GAAG,CAACD,GAAD,CAArB;;AACA,SAAOF,KAAK,CAACJ,MAAb,EAAqB;AACnBM,IAAAA,GAAG,GAAI,GAAEF,KAAK,CAACI,KAAN,EAAc,IAAGF,GAAI,EAA9B;AACAC,IAAAA,YAAY,CAACE,IAAb,CAAkBH,GAAlB;AACD;;AACD,SAAOC,YAAP;AACD;;AAEDG,OAAO,CAACjB,aAAR,GAAwBA,aAAxB","sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst pubsuffix = require(\"./pubsuffix-psl\");\n\n// Gives the permutation of all possible domainMatch()es of a given domain. The\n// array is in shortest-to-longest order.  Handy for indexing.\nconst SPECIAL_USE_DOMAINS = [\"local\"]; // RFC 6761\nfunction permuteDomain(domain, allowSpecialUseDomain) {\n  let pubSuf = null;\n  if (allowSpecialUseDomain) {\n    const domainParts = domain.split(\".\");\n    if (SPECIAL_USE_DOMAINS.includes(domainParts[domainParts.length - 1])) {\n      pubSuf = `${domainParts[domainParts.length - 2]}.${\n        domainParts[domainParts.length - 1]\n      }`;\n    } else {\n      pubSuf = pubsuffix.getPublicSuffix(domain);\n    }\n  } else {\n    pubSuf = pubsuffix.getPublicSuffix(domain);\n  }\n\n  if (!pubSuf) {\n    return null;\n  }\n  if (pubSuf == domain) {\n    return [domain];\n  }\n\n  const prefix = domain.slice(0, -(pubSuf.length + 1)); // \".example.com\"\n  const parts = prefix.split(\".\").reverse();\n  let cur = pubSuf;\n  const permutations = [cur];\n  while (parts.length) {\n    cur = `${parts.shift()}.${cur}`;\n    permutations.push(cur);\n  }\n  return permutations;\n}\n\nexports.permuteDomain = permuteDomain;\n"]},"metadata":{},"sourceType":"script"}